<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Souparna Paul - AI & Full-Stack Developer Portfolio</title>
    <!-- SEO Meta Tags -->
    <meta name="description" content="Souparna Paul is a passionate AI & Full-Stack Developer from Kolkata, specializing in Python, Machine Learning, Web Development (Streamlit, React, Firebase), and data-driven applications. Explore projects like BTC Probo Predictor, Smart Agritech, and Tournament Manager.">
    <meta name="keywords" content="Souparna Paul, portfolio, AI developer, full-stack developer, Python, Machine Learning, Streamlit, React, Firebase, web development, Kolkata, India, software developer, data science, projects, resume">
    <meta property="og:title" content="Souparna Paul - AI & Full-Stack Developer Portfolio">
    <meta property="og:description" content="Souparna Paul is a passionate AI & Full-Stack Developer from Kolkata, specializing in Python, Machine Learning, Web Development (Streamlit, React, Firebase), and data-driven applications.">
    <meta property="og:image" content="https://souparna-paul-portfolio.netlify.app/profile.png"> <!-- Replace with your live site's profile image URL -->
    <meta property="og:url" content="https://souparna-paul-portfolio.netlify.app/"> <!-- Replace with your live site URL -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:image" content="https://souparna-paul-portfolio.netlify.app/profile.png"> <!-- Replace with your live site's profile image URL -->

    <!-- Favicon - Replace with your actual favicon.ico or .png -->
    <link rel="icon" href="profile.png" type="image/png">
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Fonts - Inter -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        /* Custom CSS for dark mode transition and scroll behavior */
        :root {
            /* Light Mode Variables - Refined for a softer, modern look */
            --bg-color-light: #f8f9fa; /* Very light gray */
            --main-bg-light: #ffffff; /* Pure white for cards */
            --text-color-light: #343a40; /* Dark charcoal for body text */
            --heading-color-light: #212529; /* Even darker for headings */
            --primary-accent: #007bff; /* Vibrant blue for primary accent */
            --primary-accent-darker: #0056b3; /* Darker blue for hover */
            --secondary-accent: #6c757d; /* Muted gray for secondary */
            --skill-tag-bg: #e9ecef; /* Light gray for skill tags */
            --skill-tag-border: #dee2e6; /* Subtle border for skill tags */
            --border-color-light: #e0e0e0; /* Light border */
            --shadow-color-light: rgba(0, 0, 0, 0.08); /* Soft shadow */
            --navbar-bg-light: #ffffff; /* White for navbar in light mode */

            /* Dark Mode Variables - Adjusted for better contrast and aesthetics */
            --bg-color-dark: #121212; /* Deep dark background */
            --main-bg-dark: #1e1e1e; /* Slightly lighter dark card background */
            --text-color-dark: #e0e0e0; /* Light gray text */
            --heading-color-dark: #f8f9fa; /* White headings */
            --primary-accent-dark: #8be9fd; /* Light blue/cyan accent */
            --primary-accent-dark-hover: #50fa7b; /* Green accent for hover */
            --secondary-accent-dark: #9da3af; /* Lighter gray for secondary */
            --button-bg-color-dark: #6272a4; /* Muted blue for buttons */
            --button-hover-bg-color-dark: #44475a; /* Darker muted blue for button hover */
            --skill-tag-bg-dark: #343a40; /* Darker gray for skill tags */
            --skill-tag-border-dark: #495057; /* Darker border for skill tags */
            --border-color-dark: #3a476f; /* Dark border color */
            --shadow-color-dark: rgba(0, 0, 0, 0.4); /* Darker shadow color */
            --navbar-bg-dark: #1a1a1a; /* Very dark blue for navbar */

            /* NEW: Variable for caret color */
            --caret-color: var(--primary-accent); /* Default caret color (light mode) */
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--bg-color-light);
            color: var(--text-color-light);
            transition: background-color 0.4s ease, color 0.4s ease;
            scroll-behavior: smooth;
            overflow-x: hidden; /* GLOBAL FIX: Prevent horizontal scrollbar caused by any rogue elements */
        }

        body.dark-mode {
            background-color: var(--bg-color-dark);
            color: var(--text-color-dark);
            /* NEW: Override caret color for dark mode */
            --caret-color: var(--primary-accent-dark);
        }

        /* General element transitions for dark mode */
        .transition-colors-shadow {
            transition: background-color 0.4s ease, color 0.4s ease, border-color 0.4s ease, box-shadow 0.4s ease;
        }

        /* Main content area styling */
        .main-content-card {
            background-color: var(--main-bg-light);
            box-shadow: 0px 10px 30px var(--shadow-color-light);
            border-radius: 1.5rem; /* Even more rounded */
            transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
            border: 1px solid var(--border-color-light); /* Subtle border */
        }
        .main-content-card:hover {
            transform: translateY(-8px); /* Increased lift */
            box-shadow: 0px 20px 45px var(--shadow-color-light); /* Deeper shadow on hover */
        }
        body.dark-mode .main-content-card {
            background-color: var(--main-bg-dark);
            box-shadow: 0px 10px 30px var(--shadow-color-dark);
            border: 1px solid var(--border-color-dark);
        }
        body.dark-mode .main-content-card:hover {
            box-shadow: 0px 20px 45px var(--shadow-color-dark);
        }

        /* Headings */
        h1, h2, h3, h4, h5, h6 {
            color: var(--heading-color-light);
            /* These are now applied via Tailwind's 'break-words' class directly in HTML where needed for Project titles */
            /* word-break: break-word; */
            /* overflow-wrap: break-word; */
        }
        body.dark-mode h1, body.dark-mode h2, body.dark-mode h3, body.dark-mode h4, body.dark-mode h5, body.dark-mode h6 {
            color: var(--heading-color-dark);
        }

        /* Links */
        a {
            color: var(--primary-accent);
            transition: color 0.3s ease;
        }
        body.dark-mode a {
            color: var(--primary-accent-dark);
        }
        a:hover {
            filter: brightness(1.2);
            text-decoration: underline; /* Add underline on hover for clarity */
        }

        /* Buttons */
        .btn-primary {
            background-color: var(--primary-accent);
            color: white;
            transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
            border-radius: 9999px; /* Pill shape */
            padding: 0.85rem 2.2rem; /* Slightly larger padding */
            font-weight: 600;
            letter-spacing: 0.05em;
            text-transform: uppercase;
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15); /* Deeper initial shadow */
            position: relative;
            overflow: hidden; /* For ripple effect */
        }
        .btn-primary:hover {
            background-color: var(--primary-accent-darker);
            transform: translateY(-5px); /* More pronounced lift */
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.25); /* Even deeper shadow on hover */
        }
        .btn-primary:active {
            transform: translateY(-2px); /* Slight press effect */
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }
        body.dark-mode .btn-primary {
            background-color: var(--button-bg-color-dark);
        }
        body.dark-mode .btn-primary:hover {
            background-color: var(--button-hover-bg-color-dark);
        }

        /* Skill Tags */
        .skill-tag {
            background-color: var(--skill-tag-bg);
            color: var(--text-color-light);
            border: 1px solid var(--skill-tag-border);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.07); /* Slightly deeper shadow */
            border-radius: 0.75rem; /* More rounded */
            padding: 0.7rem 1.2rem; /* Slightly larger padding */
            font-size: 0.95rem; /* Slightly larger font */
            transition: background-color 0.3s ease, color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
            /* These are now applied via Tailwind's 'break-words' class directly in HTML where needed */
            /* word-break: break-word; */
            /* overflow-wrap: break-word; */
        }
        .skill-tag:hover {
            transform: translateY(-3px); /* More pronounced lift */
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15); /* Deeper shadow on hover */
            background-color: var(--primary-accent); /* Highlight on hover */
            color: white;
        }
        body.dark-mode .skill-tag {
            background-color: var(--skill-tag-bg-dark);
            color: var(--text-color-dark);
            border: 1px solid var(--skill-tag-border-dark);
        }
        body.dark-mode .skill-tag:hover {
            background-color: var(--primary-accent-dark);
            color: #121212; /* Dark text on light hover for contrast */
        }

        /* Project Card */
        .project-card {
            background-color: var(--main-bg-light);
            border: 1px solid var(--border-color-light);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08); /* Deeper initial shadow */
            border-radius: 1.25rem; /* More rounded */
            transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
            /* Added min-width-0 utility directly in HTML for each card */
        }
        .project-card:hover {
            transform: translateY(-10px); /* Increased lift */
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2); /* Much deeper shadow on hover */
        }
        body.dark-mode .project-card {
            background-color: var(--main-bg-dark);
            border: 1px solid var(--border-color-dark);
        }
        body.dark-mode .project-card:hover {
            box-shadow: 0 15px 35px var(--shadow-color-dark);
        }
        /* Project card text color fix */
        .project-card p,
        .project-card ul li {
            color: var(--text-color-light);
            /* These are now applied via Tailwind's 'break-words' class directly in HTML where needed */
            /* word-break: break-word; */
            /* overflow-wrap: break-word; */
        }
        body.dark-mode .project-card p,
        body.dark-mode .project-card ul li {
            color: var(--text-color-dark);
        }
        .project-image {
            border-radius: 0.75rem; /* Match card radius */
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
            max-width: 100%; /* Ensure images never overflow their container */
            height: auto;   /* Maintain aspect ratio */
        }
        body.dark-mode .project-image {
            box-shadow: 0 4px 10px rgba(0,0,0,0.3);
        }

        /* Contact Form */
        .form-input {
            background-color: var(--skill-tag-bg);
            border: 1px solid var(--skill-tag-border);
            color: var(--text-color-light);
            border-radius: 0.75rem; /* More rounded inputs */
            padding: 0.9rem 1.2rem; /* Slightly more padding */
            transition: border-color 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease;
        }
        .form-input:focus {
            border-color: var(--primary-accent);
            box-shadow: 0 0 0 4px rgba(0, 123, 255, 0.25); /* Larger, softer focus ring */
            background-color: var(--main-bg-light); /* White background on focus */
        }
        .form-input::placeholder {
            color: var(--text-color-light);
            opacity: 0.7; /* Slightly more visible placeholder */
        }
        body.dark-mode .form-input {
            background-color: var(--skill-tag-bg-dark);
            border: 1px solid var(--skill-tag-border-dark);
            color: var(--text-color-dark);
        }
        body.dark-mode .form-input:focus {
            border-color: var(--primary-accent-dark);
            box-shadow: 0 0 0 4px rgba(139, 233, 253, 0.25);
            background-color: var(--main-bg-dark); /* Dark background on focus */
        }
        body.dark-mode .form-input::placeholder {
            color: var(--text-color-dark);
            opacity: 0.7;
        }

        /* Dark mode toggle */
        #darkModeToggle {
            cursor: pointer;
            width: 55px; /* Wider toggle */
            height: 28px; /* Taller toggle */
            background-color: #ccc;
            border-radius: 14px;
            position: relative;
            transition: background-color 0.3s;
            display: flex;
            align-items: center;
            justify-content: space-around;
            padding: 0 5px;
            box-shadow: inset 0 1px 4px rgba(0,0,0,0.25); /* Deeper inset shadow */
        }
        #darkModeToggle.dark {
            background-color: #4a5568; /* Darker background for toggle in dark mode */
        }
        #darkModeToggle::before { /* Sun icon */
            content: '☀️';
            position: absolute;
            left: 6px; /* Adjusted position */
            font-size: 15px;
            opacity: 1;
            transition: opacity 0.3s;
        }
        #darkModeToggle.dark::before {
            opacity: 0;
        }
        #darkModeToggle::after { /* Moon icon */
            content: '🌙'; /* Changed to a more reliable moon emoji */
            position: absolute;
            right: 6px; /* Adjusted position */
            font-size: 15px;
            opacity: 0;
            transition: opacity 0.3s;
        }
        #darkModeToggle.dark::after {
            opacity: 1;
        }
        #darkModeToggle .toggle-circle {
            content: '';
            position: absolute;
            top: 3px;
            left: 3px;
            width: 22px; /* Slightly larger circle */
            height: 22px;
            background-color: white;
            border-radius: 50%;
            transition: transform 0.3s ease-in-out, background-color 0.3s;
            box-shadow: 0 1px 4px rgba(0,0,0,0.35); /* Deeper shadow for circle */
        }
        #darkModeToggle.dark .toggle-circle {
            transform: translateX(27px); /* Move further */
            background-color: #2c3e50; /* Darker circle in dark mode */
        }

        /* Hamburger menu and Mobile Nav Overlay */
        .hamburger {
            display: none; /* Hidden by default for desktop */
            z-index: 50;
            cursor: pointer; /* Explicitly show pointer cursor */
            /* Add transform for subtle press effect on click */
            transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease, transform 0.2s ease;
        }

        /* Styles applied ONLY when hamburger is visible (on mobile/smaller screens) */
        @media (max-width: 768px) {
            .hamburger {
                display: flex; /* Make it a flex container to center the icon */
                align-items: center; /* Vertically center the icon */
                justify-content: center; /* Horizontally center the icon */
                width: 48px;   /* Fixed width for a square/circle */
                height: 48px;  /* Fixed height for a square/circle */
                border-radius: 50%; /* Make it circular */
                background-color: var(--main-bg-light); /* Background for light mode */
                border: 1px solid var(--border-color-light); /* Border for light mode */
                box-shadow: 0 2px 8px rgba(0,0,0,0.08); /* Soft shadow for definition */
            }
            .hamburger:hover {
                background-color: var(--skill-tag-bg); /* Use a slightly different background on hover */
                box-shadow: 0 4px 12px rgba(0,0,0,0.12); /* Deeper shadow on hover */
                transform: translateY(-2px); /* Subtle lift on hover */
            }
            .hamburger:active {
                transform: translateY(0px); /* Press effect on click */
                box-shadow: 0 1px 4px rgba(0,0,0,0.05); /* Softer shadow on active */
            }
        }

        /* Dark mode specific overrides for the hamburger button */
        body.dark-mode .hamburger {
            background-color: var(--skill-tag-bg-dark); /* Darker background in dark mode */
            border: 1px solid var(--skill-tag-border-dark); /* Darker border in dark mode */
            box-shadow: 0 2px 8px var(--shadow-color-dark); /* Shadow in dark mode */
        }
        body.dark-mode .hamburger:hover {
            background-color: var(--button-hover-bg-color-dark); /* Dark mode hover background */
            border-color: var(--primary-accent-dark); /* Highlight border on hover */
            box-shadow: 0 4px 12px var(--shadow-color-dark); /* Deeper shadow on hover */
        }
        body.dark-mode .hamburger:active {
            background-color: var(--button-bg-color-dark); /* Match press effect to button style */
        }

        /* Mobile Nav Overlay */
        .mobile-nav-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: var(--navbar-bg-light); /* Fallback */
            transform: translateX(100%); /* Start off-screen */
            transition: transform 0.4s ease-out;
            z-index: 40; /* Below hamburger, above content */
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 2rem;
            box-shadow: -5px 0 15px rgba(0,0,0,0.2);
            backdrop-filter: blur(8px); /* Frosted glass effect */
            -webkit-backdrop-filter: blur(8px); /* For Safari */
            background-color: rgba(255, 255, 255, 0.9); /* Semi-transparent */
        }
        .mobile-nav-overlay.active {
            transform: translateX(0); /* Slide in */
        }
        body.dark-mode .mobile-nav-overlay {
            background-color: var(--navbar-bg-dark); /* Mobile nav background in dark mode */
            box-shadow: -5px 0 15px var(--shadow-color-dark);
            background-color: rgba(26, 26, 26, 0.9); /* Semi-transparent dark */
        }

        .mobile-nav-overlay .nav-links-mobile {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
            width: 100%;
            text-align: center;
        }
        .mobile-nav-overlay .nav-links-mobile a {
            font-size: 1.5rem;
            font-weight: 600;
            padding: 0.75rem 0;
            color: var(--heading-color-light); /* Adjusted for overlay */
            border-bottom: 1px solid var(--border-color-light);
        }
        body.dark-mode .mobile-nav-overlay .nav-links-mobile a {
            color: var(--heading-color-dark);
            border-bottom: 1px solid var(--border-color-dark);
        }
        .mobile-nav-overlay .nav-links-mobile a:last-child {
            border-bottom: none;
        }
        .mobile-nav-overlay .close-btn {
            position: absolute;
            top: 1.5rem;
            right: 1.5rem;
            font-size: 2.5rem;
            cursor: pointer;
            color: var(--heading-color-light);
        }
        body.dark-mode .mobile-nav-overlay .close-btn {
            color: var(--heading-color-dark);
        }
        @media (max-width: 768px) {
            .hamburger {
                display: block;
            }
            .nav-links-desktop { /* Hide desktop links on mobile */
                display: none;
            }
            body.mobile-menu-active {
                overflow: hidden; /* Prevent scrolling when menu is open */
            }
        }

        /* Profile image animation */
        .profile-img {
            animation: float 3s ease-in-out infinite;
            border-color: var(--primary-accent); /* Use accent color for border */
            box-shadow: 0 0 0 6px var(--primary-accent), 0 10px 20px rgba(0,0,0,0.2); /* Double border effect */
        }
        body.dark-mode .profile-img {
            border-color: var(--primary-accent-dark);
            box-shadow: 0 0 0 6px var(--primary-accent-dark), 0 10px 20px var(--shadow-color-dark);
        }
        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-12px); } /* Increased float distance */
            100% { transform: translateY(0px); }
        }

        /* Section fade-in on scroll */
        .fade-in-section {
            opacity: 0;
            transform: translateY(30px); /* More pronounced slide-up */
            transition: opacity 0.8s ease-out, transform 0.8s ease-out; /* Slower, smoother transition */
        }
        .fade-in-section.is-visible {
            opacity: 1;
            transform: translateY(0);
        }

        /* Specific styling for Education and Achievement entries */
        .education-entry, .achievement-entry {
            background-color: var(--main-bg-light);
            border: 1px solid var(--border-color-light);
            border-radius: 1rem; /* More rounded */
            padding: 1.8rem; /* More padding */
            margin-bottom: 1.25rem; /* Slightly more space */
            box-shadow: 0 5px 12px rgba(0, 0, 0, 0.06); /* Softer shadow */
            transition: transform 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease, border-color 0.3s ease;
        }

        .education-entry:hover, .achievement-entry:hover {
            transform: translateY(-5px); /* More lift */
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.12); /* Deeper shadow on hover */
        }

        body.dark-mode .education-entry, body.dark-mode .achievement-entry {
            background-color: var(--main-bg-dark);
            border: 1px solid var(--border-color-dark);
            box-shadow: 0 5px 12px var(--shadow-color-dark);
        }

        body.dark-mode .education-entry:hover, body.dark-mode .achievement-entry:hover {
            box-shadow: 0 10px 25px var(--shadow-color-dark);
        }

        /* Icons for achievements */
        .achievement-icon {
            color: var(--primary-accent); /* Use accent color for icons */
            margin-right: 1rem; /* More space */
            font-size: 1.8rem; /* Larger icons */
            min-width: 1.8rem; /* Ensure consistent alignment */
        }
        body.dark-mode .achievement-icon {
            color: var(--primary-accent-dark);
        }

        /* Footer */
        footer {
            background-color: var(--navbar-bg-dark); /* Darker footer */
            color: var(--text-color-dark); /* Ensure text is visible in dark footer */
            padding: 2rem 0; /* More padding */
            box-shadow: inset 0 5px 15px rgba(0,0,0,0.2); /* Inset shadow for depth */
        }
        footer p {
            margin-bottom: 0.5rem;
        }

        /* Header background styling */
        header {
            background-color: var(--navbar-bg-light); /* Use variable for light mode */
        }
        body.dark-mode header {
            background-color: var(--navbar-bg-dark); /* Use variable for dark mode */
        }

        /* Navbar active link highlighting */
        .nav-links-desktop a.active, .nav-links-mobile a.active {
            color: var(--primary-accent) !important; /* Force accent color */
            font-weight: 700;
            text-decoration: underline;
            text-underline-offset: 4px;
        }
        body.dark-mode .nav-links-desktop a.active, body.dark-mode .nav-links-mobile a.active {
            color: var(--primary-accent-dark) !important;
        }

        /* Scroll-to-top button */
        #scrollToTopBtn {
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            background-color: var(--primary-accent);
            color: white;
            padding: 1rem;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            cursor: pointer;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, transform 0.3s ease;
            z-index: 30;
        }
        #scrollToTopBtn:hover {
            background-color: var(--primary-accent-darker);
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.3);
        }
        body.dark-mode #scrollToTopBtn {
            background-color: var(--primary-accent-dark);
        }
        body.dark-mode #scrollToTopBtn:hover {
            background-color: var(--primary-accent-dark-hover);
        }
        #scrollToTopBtn.show {
            opacity: 1;
            visibility: visible;
        }

        /* Hero section specific styling */
        .hero-section-bg {
            background: linear-gradient(135deg, var(--bg-color-light) 0%, var(--main-bg-light) 100%);
            position: relative;
            overflow: hidden;
        }
        body.dark-mode .hero-section-bg {
            background: linear-gradient(135deg, var(--bg-color-dark) 0%, var(--main-bg-dark) 100%);
        }
        .hero-section-bg::before {
            content: '';
            position: absolute;
            top: -20%;
            left: -20%;
            width: 140%;
            height: 140%;
            background: radial-gradient(circle at top left, var(--primary-accent) 0%, transparent 25%),
                        radial-gradient(circle at bottom right, var(--secondary-accent) 0%, transparent 25%);
            opacity: 0.05;
            z-index: -1;
            animation: rotateBackground 20s linear infinite;
        }
        body.dark-mode .hero-section-bg::before {
            background: radial-gradient(circle at top left, var(--primary-accent-dark) 0%, transparent 25%),
                        radial-gradient(circle at bottom right, var(--secondary-accent-dark) 0%, transparent 25%);
            opacity: 0.1;
        }
        @keyframes rotateBackground {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }

        /* Typewriter effect */
        .typewriter-text {
            border-right: 2px solid;
            white-space: nowrap; /* Default for larger screens */
            overflow: hidden;
            animation: typing 3s steps(40, end), blink-caret .75s step-end infinite;
            display: inline-block;
            vertical-align: bottom; /* Adjusts vertical alignment for underline */
            min-height: 1.2em; /* Prevents text from jumping */
        }
        @keyframes typing {
            from { width: 0 }
            to { width: 100% }
        }
        @keyframes blink-caret {
            from, to { border-color: transparent }
            50% { border-color: var(--caret-color); }
        }

        /* Responsive adjustments for typewriter text on small screens */
        @media (max-width: 639px) { /* Targets screens smaller than 'sm' breakpoint */
            .typewriter-text {
                white-space: normal; /* Allow text to wrap */
                overflow: visible; /* Ensure wrapped text is visible */
                animation: none; /* Disable the typing animation */
                border-right: none; /* Remove the blinking caret */
                width: auto; /* Remove width constraint from animation */
                display: block; /* Change to block to allow full width and wrapping */
            }
        }
    </style>
</head>
<body>
    <!-- NOTE: For faster loading, please optimize all images (compress, consider WebP format) -->

    <!-- Header/Navigation Bar -->
    <header class="shadow-lg py-4 sticky top-0 z-20 transition-colors-shadow dark:shadow-none">
        <div class="container mx-auto px-4 flex justify-between items-center">
            <a href="#home" class="text-2xl font-extrabold text-gray-800 hover:text-blue-600 transition-colors-shadow dark:text-heading-color-dark dark:hover:text-primary-accent-dark">Souparna Paul</a>
            <div class="flex items-center space-x-6">
                <!-- Dark Mode Toggle -->
                <div id="darkModeToggle" class="relative">
                    <div class="toggle-circle"></div>
                </div>

                <!-- Hamburger Menu for Mobile -->
                <button id="hamburger" class="hamburger text-gray-800 focus:outline-none dark:text-heading-color-dark">
                    <i class="fas fa-bars text-xl"></i>
                </button>

                <!-- Navigation Links (Desktop) -->
                <nav id="navLinksDesktop" class="nav-links-desktop hidden md:flex md:space-x-6">
                    <a href="#home" class="text-gray-600 hover:text-blue-600 font-medium transition-colors-shadow dark:text-text-color-dark dark:hover:text-primary-accent-dark">Home</a>
                    <a href="#about" class="text-gray-600 hover:text-blue-600 font-medium transition-colors-shadow dark:text-text-color-dark dark:hover:text-primary-accent-dark">About Me</a>
                    <a href="#skills" class="text-gray-600 hover:text-blue-600 font-medium transition-colors-shadow dark:text-text-color-dark dark:hover:text-primary-accent-dark">Skills</a>
                    <a href="#projects" class="text-gray-600 hover:text-blue-600 font-medium transition-colors-shadow dark:text-text-color-dark dark:hover:text-primary-accent-dark">Projects</a>
                    <a href="#education" class="text-gray-600 hover:text-blue-600 font-medium transition-colors-shadow dark:text-text-color-dark dark:hover:text-primary-accent-dark">Education</a>
                    <a href="#achievements" class="text-gray-600 hover:text-blue-600 font-medium transition-colors-shadow dark:text-text-color-dark dark:hover:text-primary-accent-dark">Achievements</a>
                    <a href="#contact" class="text-gray-600 hover:text-blue-600 font-medium transition-colors-shadow dark:text-text-color-dark dark:hover:text-primary-accent-dark">Contact</a>
                </nav>
            </div>
        </div>
    </header>

    <!-- Mobile Navigation Overlay -->
    <div id="mobileNavOverlay" class="mobile-nav-overlay">
        <button id="closeMobileNav" class="close-btn" aria-label="Close mobile navigation"><i class="fas fa-times"></i></button>
        <nav class="nav-links-mobile">
            <a href="#home">Home</a>
            <a href="#about">About Me</a>
            <a href="#skills">Skills</a>
            <a href="#projects">Projects</a>
            <a href="#education">Education</a>
            <a href="#achievements">Achievements</a>
            <a href="#contact">Contact</a>
        </nav>
    </div>

    <main class="container mx-auto px-4 py-8 md:py-12">
        <!-- Home Section -->
        <!-- MODIFIED: Removed fade-in-section class to ensure it's always visible on load -->
        <section id="home" class="main-content-card hero-section-bg rounded-xl p-6 md:p-10 mb-8 md:mb-12 flex flex-col md:flex-row items-center justify-center text-center md:text-left transition-colors-shadow">
            <div class="md:w-1/3 flex justify-center mb-6 md:mb-0 md:pr-8">
                <!-- MODIFIED: Adjusted profile image size for mobile responsiveness -->
                <img src="profile.png" alt="Souparna Paul" class="profile-img rounded-full w-32 h-32 sm:w-48 sm:h-48 object-cover transition-colors-shadow">
            </div>
            <div class="md:w-2/3">
                <h1 class="text-4xl md:text-5xl font-extrabold mb-3 leading-tight">
                    Hi, I'm Souparna Paul <span class="wave-emoji">👋</span>
                </h1>
                <!-- MODIFIED: Adjusted typewriter text font size for mobile responsiveness -->
                <h2 class="text-lg sm:text-xl md:text-2xl font-semibold text-gray-700 mb-6 dark:text-text-color-dark">
                    <span class="typewriter-text">A Creatively Passionate Python Based Software and Web Developer | Kolkata, India</span>
                </h2>
                <p class="text-lg leading-relaxed mb-6 dark:text-text-color-dark">
                    I'm a Tech Enthusiast and Innovator from Madhyamgram, West Bengal.
                    I specialize in Python development, AI/ML, and full-stack web development using tools like Streamlit, Firebase, and React.
                    My strengths lie in building diverse and impactful applications, ranging from real-time, data-driven dashboards to robust full-stack web solutions. This is showcased in projects like my <strong class="font-semibold">BTC Probo Predictor</strong>, <strong class="font-semibold">Smart Agritech Streamlit Dashboard</strong>, and the <strong class="font-semibold">Tournament Manager Full-Stack Web Application</strong>.
                    I’m also passionate about applying machine learning to real-world problems, as demonstrated by my <strong class="font-semibold">Phishing URL Detection</strong> project, for which I won a Best Paper Award.
                </p>
                <div class="flex flex-col sm:flex-row justify-center md:justify-start items-center space-y-4 sm:space-y-0 sm:space-x-6 mb-6">
                    <a href="Souparna_Paul_Latest_Resume.pdf" target="_blank" class="btn-primary flex items-center justify-center">
                        <i class="fas fa-download mr-2"></i> Download Resume
                    </a>
                    <a href="#contact" class="btn-primary flex items-center justify-center bg-gray-600 hover:bg-gray-700 dark:bg-secondary-accent-dark dark:hover:bg-button-hover-bg-color-dark">
                        <i class="fas fa-envelope mr-2"></i> Contact Me
                    </a>
                </div>
                <div class="flex justify-center md:justify-start space-x-6 text-3xl mt-4">
                    <a href="https://www.linkedin.com/in/souparno-paul-28a75524b/" target="_blank" aria-label="LinkedIn" class="hover:text-blue-700 transition-colors-shadow dark:hover:text-primary-accent-dark">
                        <i class="fab fa-linkedin"></i>
                    </a>
                    <a href="https://github.com/sOuL2000s" target="_blank" aria-label="GitHub" class="hover:text-gray-900 transition-colors-shadow dark:hover:text-primary-accent-dark">
                        <i class="fab fa-github"></i>
                    </a>
                    <a href="mailto:souparnopaulreborn@gmail.com" aria-label="Email" class="hover:text-red-600 transition-colors-shadow dark:hover:text-primary-accent-dark">
                        <i class="fas fa-envelope"></i>
                    </a>
                </div>
            </div>
        </section>

        <!-- About Me Section -->
        <section id="about" class="main-content-card rounded-xl p-6 md:p-10 mb-8 md:mb-12 transition-colors-shadow fade-in-section">
            <h2 class="text-3xl md:text-4xl font-bold mb-6 text-center">About Me</h2>
            <p class="text-lg leading-relaxed mb-4 dark:text-text-color-dark">
                I am a B.Tech CSE student from Narula Institute of Technology, Kolkata, graduating in 2025.
                My journey in technology began with a strong interest in programming and problem-solving, leading me to delve into various domains:
            </p>
            <ul class="list-disc list-inside text-lg leading-relaxed space-y-2 dark:text-text-color-dark">
                <li><strong class="font-semibold">Python Development:</strong> Proficient in various Python libraries and frameworks for data science and web development.</li>
                <li><strong class="font-semibold">AI/Machine Learning:</strong> Experienced in developing and deploying machine learning models for real-world applications.</li>
                <li><strong class="font-semibold">Full-Stack Web Development:</strong> Skilled in building interactive web applications using Streamlit, Firebase, and React.</li>
                <li><strong class="font-semibold">Real-time Data-Driven Applications:</strong> Demonstrated ability to create applications that process and visualize real-time data effectively.</li>
            </ul>
            <p class="text-lg leading-relaxed mt-4 dark:text-text-color-dark">
                I thrive in environments that challenge me to learn and grow, and I am always eager to contribute to innovative projects.
                My work includes projects like <strong class="font-semibold">Smart Agritech Streamlit Dashboard</strong>, <strong class="font-semibold">BTC Probo Predictor</strong>, and a <strong class="font-semibold">Tournament Manager WebApp</strong>.
                Additionally, my passion for applying machine learning to real-world problems led to a <strong class="font-semibold">Best Paper Award for Phishing URL Detection</strong>.
                Outside of academics, I enjoy <strong class="font-semibold">Writing Stories</strong> and <strong class="font-semibold">Songs</strong>, <strong class="font-semibold">Singing</strong>, and <strong class="font-semibold">Meditating</strong>.
            </p>
        </section>

        <!-- Skills Section -->
        <section id="skills" class="main-content-card rounded-xl p-6 md:p-10 mb-8 md:mb-12 transition-colors-shadow fade-in-section">
            <h2 class="text-3xl md:text-4xl font-bold mb-6 text-center">Skills</h2>
            <div class="space-y-6">
                <div>
                    <h3 class="text-2xl font-semibold mb-3 flex items-center"><i class="fas fa-laptop-code mr-3 text-primary-accent dark:text-primary-accent-dark"></i>Programming Languages</h3>
                    <div class="flex flex-wrap gap-3">
                        <span class="skill-tag transition-colors-shadow break-words">Python</span>
                        <span class="skill-tag transition-colors-shadow break-words">JavaScript</span>
                        <span class="skill-tag transition-colors-shadow break-words">SQL</span>
                        <span class="skill-tag transition-colors-shadow break-words">C</span>
                        <span class="skill-tag transition-colors-shadow break-words">Java</span>
                        <span class="skill-tag transition-colors-shadow break-words">C++</span>
                    </div>
                </div>
                <div>
                    <h3 class="text-2xl font-semibold mb-3 flex items-center"><i class="fas fa-globe mr-3 text-primary-accent dark:text-primary-accent-dark"></i>Web Development</h3>
                    <div class="flex flex-wrap gap-3">
                        <span class="skill-tag transition-colors-shadow break-words">Streamlit</span>
                        <span class="skill-tag transition-colors-shadow break-words">React</span>
                        <span class="skill-tag transition-colors-shadow break-words">HTML</span>
                        <span class="skill-tag transition-colors-shadow break-words">CSS</span>
                        <span class="skill-tag transition-colors-shadow break-words">Render</span>
                        <span class="skill-tag transition-colors-shadow break-words">Django</span>
                    </div>
                </div>
                <div>
                    <h3 class="text-2xl font-semibold mb-3 flex items-center"><i class="fas fa-brain mr-3 text-primary-accent dark:text-primary-accent-dark"></i>Data Science & ML</h3>
                    <div class="flex flex-wrap gap-3">
                        <span class="skill-tag transition-colors-shadow break-words">Pandas</span>
                        <span class="skill-tag transition-colors-shadow break-words">NumPy</span>
                        <span class="skill-tag transition-colors-shadow break-words">Scikit-learn</span>
                        <span class="skill-tag transition-colors-shadow break-words">TensorFlow</span>
                        <span class="skill-tag transition-colors-shadow break-words">PyTorch</span>
                        <span class="skill-tag transition-colors-shadow break-words">Data Visualization</span>
                        <span class="skill-tag transition-colors-shadow break-words">Statistical Analysis</span>
                    </div>
                </div>
                <div>
                    <h3 class="text-2xl font-semibold mb-3 flex items-center"><i class="fas fa-database mr-3 text-primary-accent dark:text-primary-accent-dark"></i>Databases</h3>
                    <div class="flex flex-wrap gap-3">
                        <span class="skill-tag transition-colors-shadow break-words">Firebase-FireStore</span>
                        <span class="skill-tag transition-colors-shadow break-words">MongoDB</span>
                        <span class="skill-tag transition-colors-shadow break-words">MySQL</span>
                        <span class="skill-tag transition-colors-shadow break-words">SQLite</span>
                    </div>
                </div>
                <div>
                    <h3 class="text-2xl font-semibold mb-3 flex items-center"><i class="fas fa-tools mr-3 text-primary-accent dark:text-primary-accent-dark"></i>Tools & Platforms</h3>
                    <div class="flex flex-wrap gap-3">
                        <span class="skill-tag transition-colors-shadow break-words">Jupyter Notebooks</span>
                        <span class="skill-tag transition-colors-shadow break-words">VS Code</span>
                        <span class="skill-tag transition-colors-shadow break-words">Colab</span>
                        <span class="skill-tag transition-colors-shadow break-words">Power BI</span>
                        <span class="skill-tag transition-colors-shadow break-words">Excel</span>
                        <span class="skill-tag transition-colors-shadow break-words">GitHub</span>
                    </div>
                </div>
                <div>
                    <h3 class="text-2xl font-semibold mb-3 flex items-center"><i class="fas fa-users-line mr-3 text-primary-accent dark:text-primary-accent-dark"></i>Soft Skills</h3>
                    <div class="flex flex-wrap gap-3">
                        <span class="skill-tag transition-colors-shadow break-words">Problem-solving</span>
                        <span class="skill-tag transition-colors-shadow break-words">Teamwork</span>
                        <span class="skill-tag transition-colors-shadow break-words">Communication</span>
                        <span class="skill-tag transition-colors-shadow break-words">Adaptability</span>
                        <span class="skill-tag transition-colors-shadow break-words">Leadership</span>
                        <span class="skill-tag transition-colors-shadow break-words">Ability To Learn</span>
                    </div>
                </div>
            </div>
        </section>

        <!-- Projects Section -->
        <section id="projects" class="main-content-card rounded-xl p-6 md:p-10 mb-8 md:mb-12 transition-colors-shadow fade-in-section">
            <h2 class="text-3xl md:text-4xl font-bold mb-6 text-center">My Projects</h2>

            <h3 class="text-2xl md:text-3xl font-bold mb-4">Individual Projects</h3>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-6">

                <!-- Project 1: Python Syllabus Website -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="python.png" alt="Python Syllabus Website" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Python Syllabus Website</h4>
                    <p class="text-base mb-4 flex-grow break-words">A structured and interactive Python learning portal covering everything from basics to advanced OOP concepts. Designed for beginners, it features a clean UI, embedded code examples, and a syllabus-like roadmap for self-paced learning.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">HTML</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">JavaScript</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: 2024</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/python-syllabus-website.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://python-syllabus-website.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- Project 2: BTC Probo Predictor (Mobile Friendly) -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="probo.PNG" alt="BTC Probo Predictor" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">BTC Probo Predictor (Mobile Friendly)</h4>
                    <p class="text-base mb-4 flex-grow break-words">An AI-driven Bitcoin price predictor that compares real-time market values with user targets. Uses Binance API for live data, integrates sentiment analysis, and visualizes predictions with Plotly for traders & Probo enthusiasts.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Python</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Streamlit</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Plotly</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Pandas</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Binance API</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: July 2025</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/html-probo-predictor-website.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://probo-crypto-predictor.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- Project 3: Smart AgriTech Dashboard -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="agritech.PNG" alt="Smart AgriTech Dashboard" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Smart AgriTech Dashboard</h4>
                    <p class="text-base mb-4 flex-grow break-words">A next-gen farming assistant that monitors soil, weather, and crop data in real time. Implements AI-powered time-series forecasting for soil moisture and provides personalized crop recommendations.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Python</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Streamlit</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">TensorFlow</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Firebase</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Plotly</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: June 2025</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/Smart-AgriTech-Streamlit-Dashbard.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://smart-agritech-dashbard.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- Project 4: MATHEMATICO - Special Mathematics Coaching Website -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="mathematico.PNG" alt="MATHEMATICO Website" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">MATHEMATICO - Special Mathematics Coaching Website</h4>
                    <p class="text-base mb-4 flex-grow break-words">A modern coaching institute website with dynamic course management, testimonials, gallery, blog system, and Google Maps integration. Features dark/light themes and admin-controlled CMS for easy content updates.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">HTML</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">JavaScript</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Tailwind CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Firebase</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: July 2025</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/mathematico-coaching-website.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://mathematico-special-coaching-center.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- Project 5: Tournament Manager Full-Stack Web Application -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="tournament.PNG" alt="Tournament Manager Web App" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Tournament Manager Full-Stack Web Application</h4>
                    <p class="text-base mb-4 flex-grow break-words">A full-stack app to manage cricket/football tournaments with automated fixtures, live score updates, and leaderboard generation. Streamlines sports event management for organizers and players.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">React.js</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Node.js</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Express.js</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">MongoDB</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: May 2025</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/tournament-manager-FULL-STACK.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://tournament-manager-website.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- Project 6: My Personal Portfolio Website -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="portfolio.PNG" alt="Personal Portfolio Website" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">My Personal Portfolio Website</h4>
                    <p class="text-base mb-4 flex-grow break-words">Your personal portfolio showcasing skills, projects, and achievements. Features responsive design, smooth scroll navigation, and theme switching for an engaging user experience.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">HTML</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Tailwind CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">JavaScript</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: 2024 (Ongoing)</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/My-Portfolio-Website-Streamlit.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://souparna-paul-portfolio.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- Project 7: Dream11 AI Team Predictor -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="dream11.PNG" alt="Dream11 AI Team Predictor" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Dream11 AI Team Predictor</h4>
                    <p class="text-base mb-4 flex-grow break-words">An AI-powered fantasy cricket assistant that suggests optimal Dream11 teams using match data, player performance, and ML predictions. Built for fantasy sports fans who want an edge in team selection.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Python</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Streamlit</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Pandas</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Machine Learning</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: 2024</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/dream11-team-predictor-ai.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://dream11-ai-team-predictor.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- Project 8: Mystic Vision AI Standalone Chatbot -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="mystic.PNG" alt="Mystic Vision AI Chatbot" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Mystic Vision AI Standalone Chatbot</h4>
                    <p class="text-base mb-4 flex-grow break-words">A customizable AI chatbot with multiple deployment versions (basic, mini, lite, and standalone). Offers conversational intelligence with NLP, packaged in sleek Streamlit UIs.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Python</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Streamlit</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Natural Language Processing (NLP)</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Machine Learning</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: July 2024</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/Mystic-Vision-AI-Standalone-Chatbot.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://mystic-vision-ai-standalone-chatbot.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo (Full)</a>
                        <a href="https://mystic-vision-ai-lite.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo (Lite)</a>
                        <a href="https://mystic-vision-ai-mini.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo (Mini)</a>
                        <a href="https://mystic-vision-ai-basic.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo (Basic)</a>
                    </div>
                </div>

                <!-- NEW Project 9: Metier Institute - Full-Stack Website -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="metier.PNG" alt="Metier Institute Website" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Metier Institute - Full-Stack Website</h4>
                    <p class="text-base mb-4 flex-grow break-words">A comprehensive, responsive full-stack website developed for an educational institute. It features robust content management, user authentication, detailed course listings, and administrative functionalities. Built to provide a dynamic online presence and streamline operations, this project ensures an optimal user experience and easy content updates through a scalable architecture.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">React.js</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Node.js</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Express.js</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">MongoDB</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Firebase</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: August 2024</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/Metier-Institute-Full-Stack-Website.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://metier-institute-your-path-to-success.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- NEW Project 10: AstroMaestro AI - Personalized Vedic Astrology -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="astromaestro.PNG" alt="AstroMaestro AI" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">AstroMaestro AI - Personalized Vedic Astrology</h4>
                    <p class="text-base mb-4 flex-grow break-words">An AI-powered astrology app that generates personalized Vedic insights based on user inputs. Blends tradition with modern NLP/ML to create a digital astrology experience.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Python</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Streamlit</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Machine Learning</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Natural Language Processing (NLP)</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: August 2024</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/AstroMaestro-AI.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://astromaestro-ai.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- NEW Project 11: Multi-Game HUB Website -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="multi-game-hub.PNG" alt="Multi-Game HUB Website" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Multi-Game HUB Website</h4>
                    <p class="text-base mb-4 flex-grow break-words">An online hub for mini-games in a single portal with interactive design and smooth gameplay. Perfect showcase of JavaScript-based game development.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">HTML</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">JavaScript</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: August 2024</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/Multi-game-HUB-Website.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://multi-game-hub-website.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- NEW Project 12: Mystic Vision - Meditation Companion App -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="meditation-companion-app.png" alt="Yogify - Meditation Companion App" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Yogify - Meditation Companion App</h4>
                    <p class="text-base mb-4 flex-grow break-words">A wellness app that guides meditation, tracks mood, and suggests mindfulness practices using AI personalization. Designed to improve mental health and focus.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Python</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Streamlit</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Natural Language Processing (NLP)</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Machine Learning</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: August 2024</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/Meditation-Companion-App.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://mysticvision-meditation-companion-app.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- NEW Project 13: Cosmic Chat AI - Simple AI Chatbot -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="cosmic.png" alt="Cosmic Chat AI - Simple AI Chatbot" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Cosmic Chat AI - Simple AI Chatbot</h4>
                    <p class="text-base mb-4 flex-grow break-words">A lightweight AI chatbot integrated with Gemini API. Includes file upload support, dark/light mode, and a Tailwind CSS powered UI for sleek interactions.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">HTML</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">JavaScript</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Tailwind CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">AI/NLP</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Gemini API</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: December 2023</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/Cosmic-Chat-AI-simple-ai-chatbot-.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://cosmic-chat-ai-simple-ai-chatbot.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- NEW PROJECT 14: Small AI - Big Vision AI Chatbot -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="small-ai.PNG" alt="Small AI - Big Vision AI Chatbot" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Small AI - Big Vision AI Chatbot</h4>
                    <p class="text-base mb-4 flex-grow break-words">An AI chat assistant integrating the Gemini API, offering a clean, responsive UI with markdown support, dark/light themes, voice input, file attachments, and a conversational interface.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">HTML</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">JavaScript</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Tailwind CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Gemini API</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">AI/NLP</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Web Speech API</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Marked.js</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: December 2023</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/SMALL-AI.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://small-ai-big-vision.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- NEW PROJECT 15: The Journal AI - Personal AI Journaling App -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="journal-ai.PNG" alt="The Journal AI - Personal AI Journaling App" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">The Journal AI - Personal AI Journaling App</h4>
                    <p class="text-base mb-4 flex-grow break-words">An AI journaling assistant that analyzes daily entries, provides summaries, tracks moods, and suggests prompts for self-reflection.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Python</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Streamlit</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Natural Language Processing (NLP)</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Machine Learning</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">AI/LLM</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: August 2024</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/The-Journal-AI.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://the-journal-ai.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- NEW PROJECT 16: Simple Tournament Manager App -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="simple-tourny.PNG" alt="Simple Tournament Manager App" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Simple Tournament Manager App</h4>
                    <p class="text-base mb-4 flex-grow break-words">A lightweight web app to create and manage tournaments with ease. Users can add teams, schedule matches, and track results seamlessly. Built with simplicity and usability in mind, this app is perfect for small competitions or casual tournaments.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">HTML</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">JavaScript</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: September 2024</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/Simple-Tournament-Manager-App.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://simple-tournament-manager-app.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- NEW PROJECT 17: Excel Exporter Browser Extension -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="excel-exporter.png" alt="Excel Exporter Browser Extension" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Excel Exporter Browser Extension</h4>
                    <p class="text-base mb-4 flex-grow break-words">A powerful browser extension designed to streamline data entry by allowing users to upload a spreadsheet, map its columns to form fields on any webpage, and automatically fill them. It supports various spreadsheet formats and includes features for batch filling, conditional filling (empty fields only), and automated button clicking for full workflow automation.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">HTML</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">JavaScript</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Fuse.js</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">SheetJS</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: September 2024</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/Excel-Exporter-Browser-Extension.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <!-- No Live Demo link provided for a browser extension, as it's not a typical web app -->
                    </div>
                </div>

                <!-- NEW PROJECT 18: AI Shape Shifter Website -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="ai-shape-shifter.PNG" alt="AI Shape Shifter Website" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">AI Shape Shifter Website</h4>
                    <p class="text-base mb-4 flex-grow break-words">An AI-powered website builder where users interact with a chatbot to instantly create and customize web pages. Features local storage for saving changes, dynamic section management, and real-time style updates.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">HTML</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">JavaScript</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Gemini API</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: 2023</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/AI-Shape-Shifter-Website.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://ai-shape-shifter-website.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- NEW PROJECT 19: The Winner Challenge - Football Tournament Hub -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="football-tournament-hub.png" alt="The Winner Challenge - Football Tournament Hub" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">The Winner Challenge - Football Tournament Hub</h4>
                    <p class="text-base mb-4 flex-grow break-words">A comprehensive football tournament manager web application. It supports League, Champions League, and World Cup modes, allowing users to create tournaments, manage teams and players, generate fixtures, track live scores, view standings, player statistics, and visualize knockout brackets. Features include dark/light themes and data import/export.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">HTML</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">JavaScript</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: September 2024</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/The-Winner-Challenge-Football-Tournament-Hub.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://the-winner-challenge-tournament-hub.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- NEW PROJECT 20: Small AI v2 - Multi-Themed AI Chatbot -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="small-ai-v2.PNG" alt="Small AI v2 - Multi-Themed AI Chatbot" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Small AI v2 - Multi-Themed AI Chatbot</h4>
                    <p class="text-base mb-4 flex-grow break-words">An advanced, multi-themed AI chat assistant integrating the Gemini API. Features a sleek, responsive UI with markdown support, dark/light themes, voice input, file attachments, and a comprehensive chat session management system. Offers PWA capabilities for a native app-like experience.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">HTML</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">JavaScript</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Tailwind CSS</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Gemini API</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">AI/NLP</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Web Speech API</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Marked.js</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Local Storage</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">PWA</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: October 2024 (v2 Update)</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/SMALL-AI-v2.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://small-ai-big-vision-v2.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>


            </div>

            <h3 class="text-2xl md:text-3xl font-bold mt-10 mb-4">Team Projects</h3>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-6">
                <!-- Team Project 1: Early Detection of Parkinson’s Disease Using ML -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="parkinson's.png" alt="Early Detection of Parkinson’s Disease" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Early Detection of Parkinson’s Disease Using ML</h4>
                    <p class="text-base mb-4 flex-grow break-words">Machine learning model to detect early-stage Parkinson’s disease using biomedical voice and motion data. Aimed at aiding medical research with predictive healthcare.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Python</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Scikit-learn</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Pandas</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Machine Learning</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: 2023</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/early-parkinsons-detection-ml.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                    </div>
                </div>

                <!-- Team Project 2: Employee Management System Website -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="ems.PNG" alt="Employee Management System" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Employee Management System Website</h4>
                    <p class="text-base mb-4 flex-grow break-words">A web-based employee portal with role-based authentication, HR workflows, and real-time database integration. Helps companies streamline workforce management.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Node.js</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">React.js</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Firebase Firestore</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">HTML</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">CSS</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: Jan 2024 - June 2024</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <a href="https://github.com/sOuL2000s/simple-employee-management-system.git" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fab fa-github mr-1"></i>GitHub</a>
                        <a href="https://employee-management-system21.netlify.app/" target="_blank" class="text-blue-600 hover:underline dark:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover flex items-center break-words"><i class="fas fa-external-link-alt mr-1"></i>Live Demo</a>
                    </div>
                </div>

                <!-- Team Project 3: Phishing URL Detection Using Machine Learning -->
                <div class="project-card rounded-lg p-6 transition-colors-shadow flex flex-col min-w-0">
                    <img src="phishing.png" alt="Phishing URL Detection" class="project-image w-full h-48 object-cover mb-4">
                    <h4 class="text-xl font-semibold mb-3 break-words">Phishing URL Detection Using Machine Learning</h4>
                    <p class="text-base mb-4 flex-grow break-words">Machine learning model to detect early-stage Parkinson’s disease using biomedical voice and motion data. Aimed at aiding medical research with predictive healthcare.</p>
                    <p class="font-semibold mb-2">Tools:</p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Python</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">TensorFlow</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Scikit-learn</span>
                        <span class="skill-tag rounded-md px-3 py-1 text-xs font-medium break-words">Machine Learning</span>
                    </div>
                    <p class="text-sm text-gray-600 mb-4 dark:text-text-color-dark break-words">Date: 2024</p>
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mt-auto">
                        <!-- No GitHub or Live Demo link provided in source, keeping as is -->
                    </div>
                </div>
            </div>
        </section>

        <!-- Education Section -->
        <section id="education" class="main-content-card rounded-xl p-6 md:p-10 mb-8 md:mb-12 transition-colors-shadow fade-in-section">
            <h2 class="text-3xl md:text-4xl font-bold mb-6 text-center">Education</h2>
            <div class="space-y-4">
                <div class="education-entry">
                    <h3 class="text-2xl font-semibold mb-2">B.Tech CSE | Narula Institute of Technology, Kolkata</h3>
                    <p class="text-lg leading-relaxed dark:text-text-color-dark mb-2">2021-2025</p>
                    <ul class="list-disc list-inside text-lg leading-relaxed space-y-1 dark:text-text-color-dark">
                        <li>Relevant coursework: Data Structures & Algorithms, Object-Oriented Programming, Database Management Systems, Machine Learning, Web Technologies</li>
                        <li>Thesis/Capstone Project: Phishing URL Detection (Awarded Best Paper)</li>
                    </ul>
                </div>
                <div class="education-entry">
                    <h3 class="text-2xl font-semibold mb-2">Higher Secondary | Madhyamgram High School, Madhyamgram</h3>
                    <p class="text-lg leading-relaxed dark:text-text-color-dark">2019</p>
                </div>
                <div class="education-entry">
                    <h3 class="text-2xl font-semibold mb-2">Secondary | Barasat Mahatma Gandhi Memorial High School, Barasat</h3>
                    <p class="text-lg leading-relaxed dark:text-text-color-dark">2017</p>
                </div>
            </div>
        </section>

        <!-- Achievements Section -->
        <section id="achievements" class="main-content-card rounded-xl p-6 md:p-10 mb-8 md:mb-12 transition-colors-shadow fade-in-section">
            <h2 class="text-3xl md:text-4xl font-bold mb-6 text-center">Achievements</h2>
            <div class="space-y-4">
                <div class="achievement-entry flex items-start">
                    <i class="fas fa-award achievement-icon"></i>
                    <p class="text-lg leading-relaxed flex-1 dark:text-text-color-dark">
                        <strong class="font-semibold">Research Paper, Best Paper Award:</strong> Recognized for "Phishing URL Detection Using ML" at the 2nd National Conference, RAICCIT 2025.
                    </p>
                </div>
                <div class="achievement-entry flex items-start">
                    <i class="fas fa-lightbulb achievement-icon"></i>
                    <p class="text-lg leading-relaxed flex-1 dark:text-text-color-dark">
                        <strong class="font-semibold">SIH Internal 2023:</strong> Participated in the Smart India Hackathon (SIH) Internal competition 2023 at Narula Institute of Technology, Kolkata, on "Real-Time Vehicle Tracking System."
                    </p>
                </div>
                <div class="achievement-entry flex items-start">
                    <i class="fas fa-microphone achievement-icon"></i>
                    <p class="text-lg leading-relaxed flex-1 dark:text-text-color-dark">
                        <strong class="font-semibold">Singing Contest:</strong> Secured 2nd place in a college singing contest, NiT Jewels, in April 2022.
                    </p>
                </div>
            </div>
        </section>

        <!-- Contact Section -->
        <section id="contact" class="main-content-card rounded-xl p-6 md:p-10 mb-8 md:mb-12 transition-colors-shadow fade-in-section">
            <h2 class="text-3xl md:text-4xl font-bold mb-6 text-center">Get In Touch!</h2>
            <p class="text-lg leading-relaxed mb-6 text-center dark:text-text-color-dark">
                Feel free to reach out to me for collaborations, job opportunities, or just a chat! I'm always open to new connections.
            </p>

            <form action="https://formsubmit.co/souparnopaulreborn@gmail.com" method="POST" class="max-w-xl mx-auto space-y-4">
                <input type="hidden" name="_captcha" value="false">
                <input type="hidden" name="_next" value="https://souparna-paul-portfolio.netlify.app/thanks.html"> <!-- Redirect to a thank you page -->

                <input type="text" name="name" placeholder="Your Name" required class="form-input w-full rounded-md border focus:ring-2 focus:ring-blue-500 outline-none transition-colors-shadow">
                <input type="email" name="email" placeholder="Your Email" required class="form-input w-full rounded-md border focus:ring-2 focus:ring-blue-500 outline-none transition-colors-shadow">
                <textarea name="message" placeholder="Your Message" rows="6" required class="form-input w-full rounded-md border focus:ring-2 focus:ring-blue-500 outline-none transition-colors-shadow"></textarea>
                <button type="submit" class="btn-primary w-full py-3 rounded-md font-bold text-lg shadow-md hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">Send Message</button>
            </form>
            <p class="text-center text-lg mt-6 dark:text-text-color-dark">
                Alternatively, you can email me directly at: <code class="bg-gray-200 dark:bg-gray-700 px-2 py-1 rounded-md text-gray-800 dark:text-gray-200 transition-colors-shadow">souparnopaulreborn@gmail.com</code>
            </p>
        </section>
    </main>

    <!-- Scroll to Top Button -->
    <button id="scrollToTopBtn" aria-label="Scroll to top">
        <i class="fas fa-arrow-up"></i>
    </button>

    <!-- Footer -->
    <footer class="bg-gray-800 text-white py-6 text-center transition-colors-shadow dark:bg-navbar-bg-dark">
        <div class="container mx-auto px-4">
            <p class="text-sm">&copy; <span id="currentYear"></span> Souparna Paul. All rights reserved.</p>
            <p class="text-sm">Built with ❤️ using HTML, Tailwind CSS, and JavaScript.</p>
            <div class="flex justify-center space-x-4 text-xl mt-3">
                <a href="https://www.linkedin.com/in/souparno-paul-28a75524b/" target="_blank" aria-label="LinkedIn" class="hover:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover">
                    <i class="fab fa-linkedin"></i>
                </a>
                <a href="https://github.com/sOuL2000s" target="_blank" aria-label="GitHub" class="hover:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover">
                    <i class="fab fa-github"></i>
                </a>
                <a href="mailto:souparnopaulreborn@gmail.com" aria-label="Email" class="hover:text-primary-accent-dark dark:hover:text-primary-accent-dark-hover">
                    <i class="fas fa-envelope"></i>
                </a>
            </div>
        </div>
    </footer>

    <script>
        // Set current year in footer
        document.getElementById('currentYear').textContent = new Date().getFullYear();

        // Dark Mode Toggle
        const darkModeToggle = document.getElementById('darkModeToggle');
        const toggleCircle = darkModeToggle.querySelector('.toggle-circle');

        const applyDarkMode = (isDark) => {
            if (isDark) {
                document.body.classList.add('dark-mode');
                darkModeToggle.classList.add('dark');
            } else {
                document.body.classList.remove('dark-mode');
                darkModeToggle.classList.remove('dark');
            }
        };

        const savedDarkMode = localStorage.getItem('darkMode') === 'true';
        applyDarkMode(savedDarkMode);

        darkModeToggle.addEventListener('click', () => {
            const isCurrentlyDark = document.body.classList.contains('dark-mode');
            applyDarkMode(!isCurrentlyDark);
            localStorage.setItem('darkMode', !isCurrentlyDark);
        });

        // Mobile Menu Toggle
        const hamburger = document.getElementById('hamburger');
        const mobileNavOverlay = document.getElementById('mobileNavOverlay');
        const closeMobileNav = document.getElementById('closeMobileNav');

        hamburger.addEventListener('click', () => {
            mobileNavOverlay.classList.add('active');
            document.body.classList.add('mobile-menu-active'); // Prevent scroll
        });

        closeMobileNav.addEventListener('click', () => {
            mobileNavOverlay.classList.remove('active');
            document.body.classList.remove('mobile-menu-active');
        });

        // Close mobile menu when a link is clicked
        mobileNavOverlay.querySelectorAll('a').forEach(link => {
            link.addEventListener('click', function (e) {
                // Check if the link points to a section within the current page
                if (this.hash && document.querySelector(this.hash)) {
                    e.preventDefault(); // Prevent default only if it's an internal anchor link
                    const targetId = this.getAttribute('href');
                    const targetElement = document.querySelector(targetId);

                    if (targetElement) {
                        // Calculate offset for sticky header
                        const headerOffset = document.querySelector('header').offsetHeight;
                        const elementPosition = targetElement.getBoundingClientRect().top + window.scrollY;
                        const offsetPosition = elementPosition - headerOffset - 20; // Added 20px padding

                        window.scrollTo({
                            top: offsetPosition,
                            behavior: 'smooth'
                        });
                    }
                }
                mobileNavOverlay.classList.remove('active');
                document.body.classList.remove('mobile-menu-active');
            });
        });


        // Smooth scrolling for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const targetId = this.getAttribute('href');
                const targetElement = document.querySelector(targetId);

                if (targetElement) {
                    // Calculate offset for sticky header
                    const headerOffset = document.querySelector('header').offsetHeight;
                    const elementPosition = targetElement.getBoundingClientRect().top + window.scrollY;
                    const offsetPosition = elementPosition - headerOffset - 20; // Added 20px padding

                    window.scrollTo({
                        top: offsetPosition,
                        behavior: 'smooth'
                    });
                }
            });
        });

        // Intersection Observer for fade-in effect
        const fadeInSections = document.querySelectorAll('.fade-in-section');

        const observerOptions = {
            root: null,
            // MODIFIED: More generous rootMargin to trigger earlier
            rootMargin: '0px 0px -50px 0px', // Triggers when element is 50px from the bottom of the viewport
            threshold: 0.01 // Trigger as soon as 1% of the element is visible
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('is-visible');
                    // OPTIONAL: unobserve if you only want the animation to run once
                    // observer.unobserve(entry.target);
                } else {
                    // OPTIONAL: remove class if you want it to fade out when scrolled away
                    // entry.target.classList.remove('is-visible');
                }
            });
        }, observerOptions);

        fadeInSections.forEach(section => {
            observer.observe(section);
        });

        // Active Navbar Link on Scroll (Intersection Observer for Sections)
        const sections = document.querySelectorAll('section');
        const desktopNavLinks = document.querySelectorAll('#navLinksDesktop a');
        const mobileNavLinks = document.querySelectorAll('.nav-links-mobile a');

        const highlightActiveLink = (entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const id = entry.target.id;
                    desktopNavLinks.forEach(link => {
                        link.classList.remove('active');
                        if (link.getAttribute('href') === `#${id}`) {
                            link.classList.add('active');
                        }
                    });
                     mobileNavLinks.forEach(link => {
                        link.classList.remove('active');
                        if (link.getAttribute('href') === `#${id}`) {
                            link.classList.add('active');
                        }
                    });
                }
            });
        };

        const sectionObserverOptions = {
            root: null,
            rootMargin: '-30% 0px -70% 0px', // Adjust this to control when the active state changes
            threshold: 0 // Will trigger as soon as 1px of section is visible
        };

        const sectionObserver = new IntersectionObserver(highlightActiveLink, sectionObserverOptions);

        sections.forEach(section => {
            sectionObserver.observe(section);
        });

        // Typewriter Effect - Adjusted for mobile responsiveness
        const typewriterTextElement = document.querySelector('.typewriter-text');
        const textToType = "A Creatively Passionate Python Based Software and Web Developer | Kolkata, India";

        function typeWriter(element, text, i = 0) {
            if (i < text.length) {
                element.textContent += text.charAt(i);
                setTimeout(() => typeWriter(element, text, i + 1), 50); // Typing speed
            } else {
                element.style.borderRight = 'none'; // Remove cursor after typing
            }
        }

        const applyTypewriterEffect = () => {
            if (!typewriterTextElement) return;

            const isMobile = window.matchMedia('(max-width: 639px)').matches; // Corresponds to Tailwind's 'sm' breakpoint

            if (isMobile) {
                typewriterTextElement.textContent = textToType; // Show full text immediately
                typewriterTextElement.style.borderRight = 'none'; // Ensure no blinking caret
                // The CSS @media query will handle `animation: none; white-space: normal;`
            } else {
                // Only run typing animation if not already animated and on desktop
                if (typewriterTextElement.textContent !== textToType || typewriterTextElement.style.borderRight === 'none') {
                    typewriterTextElement.textContent = ''; // Clear text before typing
                    typewriterTextElement.style.removeProperty('border-right'); // Ensure caret can appear
                    typeWriter(typewriterTextElement, textToType); // Run typing animation for larger screens
                }
            }
        };

        // Apply on initial load
        applyTypewriterEffect();

        // Re-apply if screen size changes (e.g., rotating tablet or resizing desktop window)
        let resizeTimeout;
        window.addEventListener('resize', () => {
            clearTimeout(resizeTimeout);
            resizeTimeout = setTimeout(applyTypewriterEffect, 200); // Debounce for performance
        });


        // Scroll to Top Button functionality
        const scrollToTopBtn = document.getElementById("scrollToTopBtn");

        window.addEventListener("scroll", () => {
            if (window.scrollY > 300) { // Show button after scrolling 300px down
                scrollToTopBtn.classList.add("show");
            } else {
                scrollToTopBtn.classList.remove("show");
            }
        });

        scrollToTopBtn.addEventListener("click", () => {
            window.scrollTo({
                top: 0,
                behavior: "smooth"
            });
        });
    </script>
</body>
</html>

----------------------------------------------------------------------------------------------

I'm sharing with you the code, the GitHub link, and the demo link of a website. Now all you'll have to do is add this under my individual projects. Thank you.

https://github.com/sOuL2000s/AI-Text-Beautifier.git

https://ai-text-beautifier.netlify.app/

the code : 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Text Beautifier & Chatbot</title>
    <!-- PWA Manifest (You'll need to create manifest.json for PWA features) -->
    <link rel="manifest" href="manifest.json">
    <!-- Favicon (You'll need to create logo.png) -->
    <link rel="icon" href="logo.png" type="image/x-icon">
    <!-- Tailwind CSS CDN for styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Fonts - Inter for modern typography -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- Marked.js CDN for Markdown parsing -->
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <!-- Lucide Icons for a modern, futuristic feel -->
    <script src="https://cdn.jsdelivr.net/npm/lucide-dynamic@latest/dist/lucide.min.js"></script>
    <script src="https://unpkg.com/lucide@latest"></script>
    <style>
        /*
         * --- Custom Styles for AI Text Beautifier & Chatbot (Adapted from Small AI v2) ---
         * This section enhances the Tailwind CSS with a modern, futuristic theme,
         * including a vibrant color palette, subtle animations, and improved
         * responsiveness and UI elements, now adapted for a text presentation interface.
         */
        
        /* Base font and transition settings for the whole page */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
            overflow: hidden; /* Prevent body scroll if content overflows, let individual sections scroll */
        }
        
        body {
            font-family: 'Inter', sans-serif;
            transition: background-color 0.6s ease, color 0.6s ease;
            display: flex; /* Main flex container for sidebar and main content */
            color: var(--text-primary); /* Use theme variables */
        }

        /* --- Theme Definitions --- */
        /*
         * Each theme has a dark and light variant defined by `body[data-theme="theme-name-mode"]`.
         * This allows for unique color palettes and background designs for each theme and its mode.
         */

        /* Default Theme: Light Mode */
        body[data-theme="default-light"] {
            --bg-primary: #f3f4f6;
            --bg-secondary: #ffffff;
            --text-primary: #1f2937;
            --text-secondary: #4b5563;
            --border-color: #e5e7eb;
            --card-bg: #ffffff;
            --card-border: #e5e7eb;
            --header-bg: #f9fafb;
            --accent-primary: #6366f1;
            --accent-primary-hover: #4f46e5;
            --accent-secondary: #22d3ee;
            --accent-error: #ef4444;
            --accent-success: #22c55e;
            --user-bubble-bg: #e0f2fe;
            --user-bubble-text: #1e40af;
            --ai-bubble-bg: #f3f4f6;
            --ai-bubble-text: #374151;
            --sidebar-bg: #ffffff;
            --sidebar-border: #e5e7eb;
            --sidebar-item-hover: #f3f4f6;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(255, 255, 255, 0.8); /* Adapted from --main-chat-window-bg */

            background-image: radial-gradient(at 0% 0%, hsl(210, 30%, 95%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(200, 20%, 90%) 0%, transparent 50%);
            background-size: cover;
            background-attachment: fixed;
        }

        /* Default Theme: Dark Mode */
        body[data-theme="default-dark"] {
            --bg-primary: #0a0a0f;
            --bg-secondary: #13131a;
            --text-primary: #e5e7eb;
            --text-secondary: #a1a1aa;
            --border-color: #2d3748;
            --card-bg: #13131a;
            --card-border: #2d3748;
            --header-bg: #1f2937;
            --accent-primary: #818cf8;
            --accent-primary-hover: #6366f1;
            --accent-secondary: #67e8f9;
            --accent-error: #f87171;
            --accent-success: #4ade80;
            --user-bubble-bg: #1a237e;
            --user-bubble-text: #e0e7ff;
            --ai-bubble-bg: #2d3748;
            --ai-bubble-text: #f9fafb;
            --sidebar-bg: #13131a;
            --sidebar-border: #2d3748;
            --sidebar-item-hover: #1f2937;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(19, 19, 26, 0.9); /* Adapted from --main-chat-window-bg */

            background-image: radial-gradient(at 0% 0%, hsl(240, 60%, 8%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(260, 50%, 8%) 0%, transparent 50%);
            background-size: cover;
            background-attachment: fixed;
        }

        /* Celestial Horizon Theme: Dark Mode */
        body[data-theme="celestial-horizon-dark"] {
            --bg-primary: #0D1117;
            --bg-secondary: #161B22;
            --text-primary: #C9D1D9;
            --text-secondary: #8B949E;
            --border-color: #30363D;
            --card-bg: #1F2633;
            --card-border: #30363D;
            --header-bg: #161B22;
            --accent-primary: #58A6FF;
            --accent-primary-hover: #388BF2;
            --accent-secondary: #B1B8C1;
            --accent-error: #F87171;
            --accent-success: #4ADE80;
            --user-bubble-bg: #253B64;
            --user-bubble-text: #E0F2FE;
            --ai-bubble-bg: #1F2633;
            --ai-bubble-text: #C9D1D9;
            --sidebar-bg: #161B22;
            --sidebar-border: #30363D;
            --sidebar-item-hover: #1F2633;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(22, 27, 34, 0.9);

            background-image: radial-gradient(at 0% 0%, hsl(220, 40%, 10%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(260, 40%, 10%) 0%, transparent 50%),
                              url('data:image/svg+xml;utf8,<svg width="100%" height="100%" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><defs><filter id="f1" x="-50%" y="-50%" width="200%" height="200%"><feGaussianBlur in="SourceGraphic" stdDeviation="0.3" /></filter></defs><rect width="100" height="100" fill="%230D1117" /><g filter="url(%23f1)" opacity="0.6"><circle cx="10" cy="15" r="0.2" fill="%23c9d1d9" /><circle cx="30" cy="5" r="0.3" fill="%2358A6FF" /><circle cx="50" cy="20" r="0.25" fill="%23c9d1d9" /><circle cx="70" cy="10" r="0.35" fill="%2358A6FF" /><circle cx="90" cy="25" r="0.3" fill="%23c9d1d9" /><circle cx="20" cy="40" r="0.3" fill="%2358A6FF" /><circle cx="45" cy="35" r="0.2" fill="%23c9d1d9" /><circle cx="65" cy="50" r="0.35" fill="%2358A6FF" /><circle cx="85" cy="40" r="0.25" fill="%23c9d1d9" /><circle cx="5" cy="60" r="0.35" fill="%2358A6FF" /><circle cx="25" cy="70" r="0.25" fill="%23c9d1d9" /><circle cx="40" cy="85" r="0.3" fill="%2358A6FF" /><circle cx="60" cy="75" r="0.2" fill="%23c9d1d9" /><circle cx="80" cy="90" r="0.35" fill="%2358A6FF" /><circle cx="95" cy="65" r="0.3" fill="%23c9d1d9" /></g></svg>');
            background-size: cover, cover, cover;
            background-position: center center;
            background-attachment: fixed;
        }

        /* Celestial Horizon Theme: Light Mode */
        body[data-theme="celestial-horizon-light"] {
            --bg-primary: #F0F4F8;
            --bg-secondary: #FFFFFF;
            --text-primary: #2D3748;
            --text-secondary: #718096;
            --border-color: #E2E8F0;
            --card-bg: #FFFFFF;
            --card-border: #E2E8F0;
            --header-bg: #EDF2F7;
            --accent-primary: #3B82F6;
            --accent-primary-hover: #2563EB;
            --accent-secondary: #60A5FA;
            --accent-error: #EF4444;
            --accent-success: #22C55E;
            --user-bubble-bg: #DBEAFE;
            --user-bubble-text: #1E40AF;
            --ai-bubble-bg: #EBF4FF;
            --ai-bubble-text: #2D3748;
            --sidebar-bg: #FFFFFF;
            --sidebar-border: #E2E8F0;
            --sidebar-item-hover: #F0F4F8;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(255, 255, 255, 0.8);

            background-image: radial-gradient(at 0% 0%, hsl(200, 50%, 98%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(240, 50%, 95%) 0%, transparent 50%);
            background-size: cover;
            background-attachment: fixed;
        }

        /* Verdant Calm Theme: Dark Mode (Renamed from Forest Whisper) */
        body[data-theme="verdant-calm-dark"] {
            --bg-primary: #1a2a22;
            --bg-secondary: #21362d;
            --text-primary: #e0f2e8;
            --text-secondary: #99bbaa;
            --border-color: #3f544c;
            --card-bg: #294237;
            --card-border: #4a6356;
            --header-bg: #2c493c;
            --accent-primary: #3cb878;
            --accent-primary-hover: #2fa163;
            --accent-secondary: #60c58e;
            --accent-error: #f87171;
            --accent-success: #4ade80;
            --user-bubble-bg: #1e8449;
            --user-bubble-text: #e0f2e8;
            --ai-bubble-bg: #34495e;
            --ai-bubble-text: #e0f2e8;
            --sidebar-bg: #21362d;
            --sidebar-border: #3f544c;
            --sidebar-item-hover: #2c493c;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(33, 54, 45, 0.9);

            background-image: radial-gradient(at 0% 0%, hsl(150, 20%, 15%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(120, 20%, 12%) 0%, transparent 50%),
                              linear-gradient(rgba(0,0,0,0.4), rgba(0,0,0,0.4)),
                              url('data:image/svg+xml;utf8,<svg width="100%" height="100%" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><defs><filter id="f2" x="-50%" y="-50%" width="200%" height="200%"><feTurbulence type="fractalNoise" baseFrequency="0.6" numOctaves="3" result="noise" /><feDiffuseLighting in="noise" lightingColor="%234A6356" surfaceScale="5" result="light"><feDistantLight azimuth="235" elevation="60" /></feDiffuseLighting><feComposite in="SourceGraphic" in2="light" operator="arithmetic" k1="0" k2="1" k3="1" k4="0" /></filter></defs><rect width="100" height="100" fill="%231a2a22" filter="url(%23f2)" /></svg>');
            background-size: cover, cover, cover, cover;
            background-position: center center;
            background-attachment: fixed;
        }

        /* Verdant Calm Theme: Light Mode */
        body[data-theme="verdant-calm-light"] {
            --bg-primary: #edf9f5;
            --bg-secondary: #ffffff;
            --text-primary: #2d3f35;
            --text-secondary: #5e7d6b;
            --border-color: #dbeae5;
            --card-bg: #ffffff;
            --card-border: #dbeae5;
            --header-bg: #f5fcf9;
            --accent-primary: #3cb878;
            --accent-primary-hover: #2fa163;
            --accent-secondary: #60c58e;
            --accent-error: #ef4444;
            --accent-success: #22c55e;
            --user-bubble-bg: #c8e6c9;
            --user-bubble-text: #1b5e20;
            --ai-bubble-bg: #e8f5e9;
            --ai-bubble-text: #388e3c;
            --sidebar-bg: #ffffff;
            --sidebar-border: #dbeae5;
            --sidebar-item-hover: #edf9f5;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(255, 255, 255, 0.8);

            background-image: radial-gradient(at 0% 0%, hsl(140, 20%, 98%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(100, 15%, 95%) 0%, transparent 50%);
            background-size: cover;
            background-attachment: fixed;
        }

        /* Cybernetic Pulse Theme: Dark Mode */
        body[data-theme="cybernetic-pulse-dark"] {
            --bg-primary: #0a0e1a;
            --bg-secondary: #161c28;
            --text-primary: #e2e8f0;
            --text-secondary: #94a3b8;
            --border-color: #2f3e52;
            --card-bg: #1f2a3a;
            --card-border: #3a4b5e;
            --header-bg: #1f2a3a;
            --accent-primary: #0ea5e9;
            --accent-primary-hover: #0284c7;
            --accent-secondary: #38bdf8;
            --accent-error: #f87171;
            --accent-success: #4ade80;
            --user-bubble-bg: #0c4a6e;
            --user-bubble-text: #e0f2fe;
            --ai-bubble-bg: #2d3748;
            --ai-bubble-text: #f0f8ff;
            --sidebar-bg: #161c28;
            --sidebar-border: #2f3e52;
            --sidebar-item-hover: #1f2a3a;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(22, 28, 40, 0.9);

            background-image: radial-gradient(at 0% 0%, hsl(210, 50%, 8%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(230, 40%, 8%) 0%, transparent 50%),
                              linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)),
                              url('data:image/svg+xml;utf8,<svg width="100%" height="100%" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><defs><pattern id="circuit" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 L 0 10" fill="none" stroke="%232f3e52" stroke-width="0.3" /></pattern></defs><rect width="100" height="100" fill="url(%23circuit)" /></svg>');
            background-size: cover, cover, cover, auto;
            background-position: center center;
            background-attachment: fixed;
        }

        /* Cybernetic Pulse Theme: Light Mode */
        body[data-theme="cybernetic-pulse-light"] {
            --bg-primary: #f8fafc;
            --bg-secondary: #ffffff;
            --text-primary: #1e293b;
            --text-secondary: #475569;
            --border-color: #e0e7f2;
            --card-bg: #ffffff;
            --card-border: #e0e7f2;
            --header-bg: #f1f5f9;
            --accent-primary: #0ea5e9;
            --accent-primary-hover: #0284c7;
            --accent-secondary: #38bdf8;
            --accent-error: #ef4444;
            --accent-success: #22c55e;
            --user-bubble-bg: #bfdbfe;
            --user-bubble-text: #1e3a8a;
            --ai-bubble-bg: #e0f2fe;
            --ai-bubble-text: #0284c7;
            --sidebar-bg: #ffffff;
            --sidebar-border: #e0e7f2;
            --sidebar-item-hover: #f1f5f9;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(255, 255, 255, 0.8);

            background-image: radial-gradient(at 0% 0%, hsl(200, 30%, 98%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(220, 20%, 95%) 0%, transparent 50%);
            background-size: cover;
            background-attachment: fixed;
        }

        /* Urban Pulse Theme: Dark Mode */
        body[data-theme="urban-pulse-dark"] {
            --bg-primary: #1A1A1D;
            --bg-secondary: #242426;
            --text-primary: #F0F0F0;
            --text-secondary: #A0A0A0;
            --border-color: #38383B;
            --card-bg: #242426;
            --card-border: #38383B;
            --header-bg: #1A1A1D;
            --accent-primary: #00BFFF; /* Deep Sky Blue */
            --accent-primary-hover: #009ACD;
            --accent-secondary: #66CCFF;
            --accent-error: #F87171;
            --accent-success: #4ADE80;
            --user-bubble-bg: #0F4C81;
            --user-bubble-text: #E0FFFF;
            --ai-bubble-bg: #36454F;
            --ai-bubble-text: #F0F0F0;
            --sidebar-bg: #1A1A1D;
            --sidebar-border: #38383B;
            --sidebar-item-hover: #242426;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(36, 36, 38, 0.9);

            background-image: linear-gradient(rgba(0,0,0,0.7), rgba(0,0,0,0.7)), url('data:image/svg+xml;utf8,<svg width="100%" height="100%" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 L 0 10" fill="none" stroke="%23303030" stroke-width="0.3" /></pattern></defs><rect width="100" height="100" fill="url(%23grid)" /></svg>');
            background-size: cover, auto;
            background-position: center center;
            background-attachment: fixed;
        }

        /* Urban Pulse Theme: Light Mode */
        body[data-theme="urban-pulse-light"] {
            --bg-primary: #F2F4F8;
            --bg-secondary: #FFFFFF;
            --text-primary: #333333;
            --text-secondary: #777777;
            --border-color: #DDE2E8;
            --card-bg: #FFFFFF;
            --card-border: #DDE2E8;
            --header-bg: #E8ECF2;
            --accent-primary: #1E90FF; /* Dodger Blue */
            --accent-primary-hover: #107EEB;
            --accent-secondary: #63B2FF;
            --accent-error: #EF4444;
            --accent-success: #22C55E;
            --user-bubble-bg: #CCE5FF;
            --user-bubble-text: #003F8C;
            --ai-bubble-bg: #E8F0F5;
            --ai-bubble-text: #333333;
            --sidebar-bg: #FFFFFF;
            --sidebar-border: #DDE2E8;
            --sidebar-item-hover: #E8F0F5;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(255, 255, 255, 0.8);

            background-image: radial-gradient(at 0% 0%, hsl(210, 30%, 98%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(200, 20%, 95%) 0%, transparent 50%);
            background-size: cover;
            background-attachment: fixed;
        }

        /* Rustic Ember Theme: Dark Mode */
        body[data-theme="rustic-ember-dark"] {
            --bg-primary: #3E2723;
            --bg-secondary: #4E342E;
            --text-primary: #FBE9E7;
            --text-secondary: #BCAAA4;
            --border-color: #5D4037;
            --card-bg: #4E342E;
            --card-border: #5D4037;
            --header-bg: #3E2723;
            --accent-primary: #D84315;
            --accent-primary-hover: #BF360C;
            --accent-secondary: #FF8A65;
            --accent-error: #F87171;
            --accent-success: #4ADE80;
            --user-bubble-bg: #8D6E63;
            --user-bubble-text: #FBE9E7;
            --ai-bubble-bg: #5D4037;
            --ai-bubble-text: #FBE9E7;
            --sidebar-bg: #3E2723;
            --sidebar-border: #5D4037;
            --sidebar-item-hover: #4E342E;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(78, 52, 46, 0.9);

            background-image: linear-gradient(rgba(0,0,0,0.6), rgba(0,0,0,0.6)), url('data:image/svg+xml;utf8,<svg width="100%" height="100%" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><defs><filter id="woodgrain" x="-50%" y="-50%" width="200%" height="200%"><feTurbulence type="fractalNoise" baseFrequency="0.05" numOctaves="4" stitchTiles="stitch" result="texture"/><feColorMatrix type="saturate" values="0.2"/><feComponentTransfer><feFuncR type="linear" slope="0.5" intercept="0.2"/><feFuncG type="linear" slope="0.5" intercept="0.1"/><feFuncB type="linear" slope="0.5" intercept="0"/></feComponentTransfer></filter></defs><rect width="100" height="100" fill="%233E2723" filter="url(%23woodgrain)"/></svg>');
            background-size: cover, cover;
            background-position: center center;
            background-attachment: fixed;
        }

        /* Rustic Ember Theme: Light Mode */
        body[data-theme="rustic-ember-light"] {
            --bg-primary: #F5E8DC;
            --bg-secondary: #FFFFFF;
            --text-primary: #4E342E;
            --text-secondary: #8D6E63;
            --border-color: #E6DCCD;
            --card-bg: #FFFFFF;
            --card-border: #E6DCCD;
            --header-bg: #F8EFE5;
            --accent-primary: #E65100;
            --accent-primary-hover: #D84315;
            --accent-secondary: #FFB74D;
            --accent-error: #EF4444;
            --accent-success: #22C55E;
            --user-bubble-bg: #FFCCBC;
            --user-bubble-text: #BF360C;
            --ai-bubble-bg: #FBE9E7;
            --ai-bubble-text: #4E342E;
            --sidebar-bg: #FFFFFF;
            --sidebar-border: #E6DCCD;
            --sidebar-item-hover: #F8EFE5;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(255, 255, 255, 0.8);

            background-image: radial-gradient(at 0% 0%, hsl(30, 40%, 98%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(15, 30%, 95%) 0%, transparent 50%);
            background-size: cover;
            background-attachment: fixed;
        }

        /* Neon Mirage Theme: Dark Mode */
        body[data-theme="neon-mirage-dark"] {
            --bg-primary: #05001C;
            --bg-secondary: #120033;
            --text-primary: #E0FFFF;
            --text-secondary: #8A2BE2;
            --border-color: #2F004F;
            --card-bg: #1A0040;
            --card-border: #2F004F;
            --header-bg: #120033;
            --accent-primary: #FF1493;
            --accent-primary-hover: #C7007C;
            --accent-secondary: #00BFFF;
            --accent-error: #F87171;
            --accent-success: #4ADE80;
            --user-bubble-bg: #4B0082;
            --user-bubble-text: #E0FFFF;
            --ai-bubble-bg: #2E0854;
            --ai-bubble-text: #E0FFFF;
            --sidebar-bg: #120033;
            --sidebar-border: #2F004F;
            --sidebar-item-hover: #1A0040;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(26, 0, 64, 0.9);

            background-image: radial-gradient(at 0% 0%, hsl(300, 80%, 15%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(240, 80%, 15%) 0%, transparent 50%),
                              linear-gradient(to top right, rgba(255, 20, 147, 0.1), transparent),
                              linear-gradient(to bottom left, rgba(0, 191, 255, 0.1), transparent);
            background-size: cover, cover, cover, cover;
            background-position: center center;
            background-attachment: fixed;
        }

        /* Neon Mirage Theme: Light Mode */
        body[data-theme="neon-mirage-light"] {
            --bg-primary: #F8F0FF;
            --bg-secondary: #FFFFFF;
            --text-primary: #330066;
            --text-secondary: #663399;
            --border-color: #EBD9FC;
            --card-bg: #FFFFFF;
            --card-border: #EBD9FC;
            --header-bg: #F2E0FF;
            --accent-primary: #FF69B4;
            --accent-primary-hover: #E0509B;
            --accent-secondary: #87CEEB;
            --accent-error: #EF4444;
            --accent-success: #22C55E;
            --user-bubble-bg: #FCE4EC;
            --user-bubble-text: #C2185B;
            --ai-bubble-bg: #F3E5F5;
            --ai-bubble-text: #330066;
            --sidebar-bg: #FFFFFF;
            --sidebar-border: #EBD9FC;
            --sidebar-item-hover: #F2E0FF;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(255, 255, 255, 0.8);

            background-image: radial-gradient(at 0% 0%, hsl(330, 80%, 98%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(270, 80%, 95%) 0%, transparent 50%);
            background-size: cover;
            background-attachment: fixed;
        }

        /* Ivory Bloom Theme: Dark Mode */
        body[data-theme="ivory-bloom-dark"] {
            --bg-primary: #2B2D42;
            --bg-secondary: #4A4E69;
            --text-primary: #DCDCDC;
            --text-secondary: #A0A4B8;
            --border-color: #5D607E;
            --card-bg: #4A4E69;
            --card-border: #5D607E;
            --header-bg: #373A50;
            --accent-primary: #9B59B6;
            --accent-primary-hover: #8E44AD;
            --accent-secondary: #66CCFF;
            --accent-error: #F87171;
            --accent-success: #4ADE80;
            --user-bubble-bg: #7C4F9B;
            --user-bubble-text: #FFFFFF;
            --ai-bubble-bg: #5D607E;
            --ai-bubble-text: #DCDCDC;
            --sidebar-bg: #2B2D42;
            --sidebar-border: #5D607E;
            --sidebar-item-hover: #373A50;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(74, 78, 105, 0.9);

            background-image: radial-gradient(at 0% 0%, hsl(240, 20%, 20%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(200, 20%, 18%) 0%, transparent 50%),
                              linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)),
                              url('data:image/svg+xml;utf8,<svg width="100%" height="100%" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><defs><pattern id="petal" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M5 0 L6 4 L10 5 L6 6 L5 10 L4 6 L0 5 L4 4 Z" fill="%234A4E69" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23petal)"/></svg>');
            background-size: cover, cover, cover, auto;
            background-position: center center;
            background-attachment: fixed;
        }

        /* Ivory Bloom Theme: Light Mode */
        body[data-theme="ivory-bloom-light"] {
            --bg-primary: #FDFDFD;
            --bg-secondary: #FFFFFF;
            --text-primary: #333333;
            --text-secondary: #777777;
            --border-color: #EAEAEA;
            --card-bg: #FFFFFF;
            --card-border: #EAEAEA;
            --header-bg: #F5F5F5;
            --accent-primary: #8E44AD;
            --accent-primary-hover: #7F3C9E;
            --accent-secondary: #BA68C8;
            --accent-error: #EF4444;
            --accent-success: #22C55E;
            --user-bubble-bg: #F2E6F7;
            --user-bubble-text: #5D2C7B;
            --ai-bubble-bg: #EAE0F0;
            --ai-bubble-text: #333333;
            --sidebar-bg: #FFFFFF;
            --sidebar-border: #EAEAEA;
            --sidebar-item-hover: #F5F5F5;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(255, 255, 255, 0.8);

            background-image: radial-gradient(at 0% 0%, hsl(300, 10%, 99%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(280, 15%, 97%) 0%, transparent 50%),
                              url('data:image/svg+xml;utf8,<svg width="100%" height="100%" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><defs><pattern id="flower" width="15" height="15" patternUnits="userSpaceOnUse"><path d="M7.5 0 L9 4 L13 6 L9 8 L7.5 12 L6 8 L2 6 L6 4 Z" fill="%23EAEAEA" opacity="0.3"/></pattern></defs><rect width="100" height="100" fill="url(%23flower)"/></svg>');
            background-size: cover, cover, auto;
            background-position: center center;
            background-attachment: fixed;
        }

        /* Obsidian Night Theme: Dark Mode */
        body[data-theme="obsidian-night-dark"] {
            --bg-primary: #121212;
            --bg-secondary: #1E1E1E;
            --text-primary: #F0F0F0;
            --text-secondary: #A0A0A0;
            --border-color: #333333;
            --card-bg: #1E1E1E;
            --card-border: #333333;
            --header-bg: #121212;
            --accent-primary: #BB86FC;
            --accent-primary-hover: #9E65E2;
            --accent-secondary: #03DAC6;
            --accent-error: #CF6679;
            --accent-success: #03DAC6;
            --user-bubble-bg: #3700B3;
            --user-bubble-text: #FFFFFF;
            --ai-bubble-bg: #2C2C2C;
            --ai-bubble-text: #F0F0F0;
            --sidebar-bg: #121212;
            --sidebar-border: #333333;
            --sidebar-item-hover: #1E1E1E;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(30, 30, 30, 0.9);

            background-image: radial-gradient(at 0% 0%, hsl(250, 10%, 10%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(200, 10%, 10%) 0%, transparent 50%),
                              linear-gradient(rgba(0,0,0,0.8), rgba(0,0,0,0.8)),
                              url('data:image/svg+xml;utf8,<svg width="100%" height="100%" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><defs><pattern id="dark-hex" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M0 5 L5 0 L10 5 L5 10 Z" fill="none" stroke="%23333333" stroke-width="0.2"/></pattern></defs><rect width="100" height="100" fill="url(%23dark-hex)"/></svg>');
            background-size: cover, cover, cover, auto;
            background-position: center center;
            background-attachment: fixed;
        }

        /* Obsidian Night Theme: Light Mode */
        body[data-theme="obsidian-night-light"] {
            --bg-primary: #E0E0E0;
            --bg-secondary: #FFFFFF;
            --text-primary: #2C2C2C;
            --text-secondary: #6B6B6B;
            --border-color: #C0C0C0;
            --card-bg: #FFFFFF;
            --card-border: #C0C0C0;
            --header-bg: #D0D0D0;
            --accent-primary: #6200EE;
            --accent-primary-hover: #5B00D9;
            --accent-secondary: #018786;
            --accent-error: #B00020;
            --accent-success: #018786;
            --user-bubble-bg: #BBDEFB;
            --user-bubble-text: #1A237E;
            --ai-bubble-bg: #E0E0E0;
            --ai-bubble-text: #2C2C2C;
            --sidebar-bg: #FFFFFF;
            --sidebar-border: #C0C0C0;
            --sidebar-item-hover: #D0D0D0;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(255, 255, 255, 0.8);

            background-image: radial-gradient(at 0% 0%, hsl(240, 10%, 95%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(200, 10%, 92%) 0%, transparent 50%);
            background-size: cover;
            background-attachment: fixed;
        }

        /* Solar Dawn Theme: Dark Mode */
        body[data-theme="solar-dawn-dark"] {
            --bg-primary: #1A0E2A;
            --bg-secondary: #2C1840;
            --text-primary: #FCE8D8;
            --text-secondary: #D8BFD8;
            --border-color: #40265B;
            --card-bg: #2C1840;
            --card-border: #40265B;
            --header-bg: #1A0E2A;
            --accent-primary: #FF5722;
            --accent-primary-hover: #E64A19;
            --accent-secondary: #FFCC80;
            --accent-error: #F87171;
            --accent-success: #4ADE80;
            --user-bubble-bg: #7C4F9B;
            --user-bubble-text: #FCE8D8;
            --ai-bubble-bg: #40265B;
            --ai-bubble-text: #FCE8D8;
            --sidebar-bg: #1A0E2A;
            --sidebar-border: #40265B;
            --sidebar-item-hover: #2C1840;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(44, 24, 64, 0.9);

            background-image: linear-gradient(to top right, #3C096C, #6D2B7E, #FF5722);
            background-size: cover;
            background-position: center center;
            background-attachment: fixed;
        }

        /* Solar Dawn Theme: Light Mode */
        body[data-theme="solar-dawn-light"] {
            --bg-primary: #FFFBEA;
            --bg-secondary: #FFFFFF;
            --text-primary: #3E2723;
            --text-secondary: #8D6E63;
            --border-color: #FFE0B2;
            --card-bg: #FFFFFF;
            --card-border: #FFE0B2;
            --header-bg: #FFF3E0;
            --accent-primary: #FF8F00;
            --accent-primary-hover: #FF6F00;
            --accent-secondary: #FFD54F;
            --accent-error: #EF4444;
            --accent-success: #22C55E;
            --user-bubble-bg: #FFE0B2;
            --user-bubble-text: #E65100;
            --ai-bubble-bg: #FFF3E0;
            --ai-bubble-text: #3E2723;
            --sidebar-bg: #FFFFFF;
            --sidebar-border: #FFE0B2;
            --sidebar-item-hover: #FFF3E0;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(255, 255, 255, 0.8);

            background-image: linear-gradient(to top left, #FFD54F, #FFECB3, #FFFDE7);
            background-size: cover;
            background-position: center center;
            background-attachment: fixed;
        }

        /* Aurora Drift Theme: Dark Mode */
        body[data-theme="aurora-drift-dark"] {
            --bg-primary: #0A192F;
            --bg-secondary: #172A45;
            --text-primary: #E6F0FF;
            --text-secondary: #A0B3D6;
            --border-color: #2F476D;
            --card-bg: #172A45;
            --card-border: #2F476D;
            --header-bg: #0A192F;
            --accent-primary: #66CCCC;
            --accent-primary-hover: #55B3B3;
            --accent-secondary: #99CCFF;
            --accent-error: #F87171;
            --accent-success: #4ADE80;
            --user-bubble-bg: #336699;
            --user-bubble-text: #E6F0FF;
            --ai-bubble-bg: #2F476D;
            --ai-bubble-text: #E6F0FF;
            --sidebar-bg: #0A192F;
            --sidebar-border: #2F476D;
            --sidebar-item-hover: #172A45;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(23, 42, 69, 0.9);

            background-image: linear-gradient(to top right, #0A192F, #172A45, #2F476D, #336699);
            background-size: cover;
            background-position: center center;
            background-attachment: fixed;
            animation: aurora-move 60s infinite alternate;
        }

        /* Aurora Drift Theme: Light Mode */
        body[data-theme="aurora-drift-light"] {
            --bg-primary: #E0F2F7;
            --bg-secondary: #FFFFFF;
            --text-primary: #2B4550;
            --text-secondary: #5E7A8A;
            --border-color: #B2EBF2;
            --card-bg: #FFFFFF;
            --card-border: #B2EBF2;
            --header-bg: #CCEEF0;
            --accent-primary: #00BCD4;
            --accent-primary-hover: #00ACC1;
            --accent-secondary: #4DD0E1;
            --accent-error: #EF4444;
            --accent-success: #22C55E;
            --user-bubble-bg: #B2EBF2;
            --user-bubble-text: #006064;
            --ai-bubble-bg: #CCEEF0;
            --ai-bubble-text: #2B4550;
            --sidebar-bg: #FFFFFF;
            --sidebar-border: #B2EBF2;
            --sidebar-item-hover: #CCEEF0;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(255, 255, 255, 0.8);

            background-image: linear-gradient(to bottom left, #E0F7FA, #B2EBF2, #80DEEA);
            background-size: cover;
            background-position: center center;
            background-attachment: fixed;
        }
        @keyframes aurora-move {
            0% { background-position: 0% 0%; }
            100% { background-position: 100% 100%; }
        }

        /* Timeless Echo Theme: Dark Mode */
        body[data-theme="timeless-echo-dark"] {
            --bg-primary: #2C2C2C;
            --bg-secondary: #3D3D3D;
            --text-primary: #E0E0E0;
            --text-secondary: #B0B0B0;
            --border-color: #555555;
            --card-bg: #3D3D3D;
            --card-border: #555555;
            --header-bg: #2C2C2C;
            --accent-primary: #A57C52;
            --accent-primary-hover: #8B653D;
            --accent-secondary: #C8A87C;
            --accent-error: #F87171;
            --accent-success: #4ADE80;
            --user-bubble-bg: #785A3D;
            --user-bubble-text: #E0E0E0;
            --ai-bubble-bg: #555555;
            --ai-bubble-text: #E0E0E0;
            --sidebar-bg: #2C2C2C;
            --sidebar-border: #555555;
            --sidebar-item-hover: #3D3D3D;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(61, 61, 61, 0.9);

            background-image: linear-gradient(rgba(0,0,0,0.6), rgba(0,0,0,0.6)), url('data:image/svg+xml;utf8,<svg width="100%" height="100%" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><defs><filter id="f3" x="-50%" y="-50%" width="200%" height="200%"><feTurbulence type="fractalNoise" baseFrequency="0.01" numOctaves="3" result="noise" /><feColorMatrix type="saturate" values="0.3"/><feComponentTransfer><feFuncR type="linear" slope="0.8" intercept="0.1"/><feFuncG type="linear" slope="0.7" intercept="0.1"/><feFuncB type="linear" slope="0.6" intercept="0.1"/></feComponentTransfer></filter></defs><rect width="100" height="100" fill="%232C2C2C" filter="url(%23f3)" /></svg>');
            background-size: cover, cover;
            background-position: center center;
            background-attachment: fixed;
        }

        /* Timeless Echo Theme: Light Mode */
        body[data-theme="timeless-echo-light"] {
            --bg-primary: #FDF7E5;
            --bg-secondary: #FFFFFF;
            --text-primary: #4A4A4A;
            --text-secondary: #808080;
            --border-color: #E6E0D3;
            --card-bg: #FFFFFF;
            --card-border: #E6E0D3;
            --header-bg: #F5EFEB;
            --accent-primary: #8D6E63;
            --accent-primary-hover: #795548;
            --accent-secondary: #BCAAA4;
            --accent-error: #EF4444;
            --accent-success: #22C55E;
            --user-bubble-bg: #D7CCC8;
            --user-bubble-text: #5D4037;
            --ai-bubble-bg: #EFEBE9;
            --ai-bubble-text: #4A4A4A;
            --sidebar-bg: #FFFFFF;
            --sidebar-border: #E6E0D3;
            --sidebar-item-hover: #F5EFEB;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(255, 255, 255, 0.8);

            background-image: radial-gradient(at 0% 0%, hsl(40, 30%, 98%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(20, 20%, 95%) 0%, transparent 50%),
                              url('data:image/svg+xml;utf8,<svg width="100%" height="100%" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><defs><pattern id="vintage-pattern" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 0 0 L 10 10 M 10 0 L 0 10" stroke="%23E6E0D3" stroke-width="0.5" opacity="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23vintage-pattern)"/></svg>');
            background-size: cover, cover, auto;
            background-position: center center;
            background-attachment: fixed;
        }

        /* Mystic Void Theme: Dark Mode (Bonus Theme) */
        body[data-theme="mystic-void-dark"] {
            --bg-primary: #110B1D;
            --bg-secondary: #1F1731;
            --text-primary: #ECE4F7;
            --text-secondary: #B29BCE;
            --border-color: #372A4F;
            --card-bg: #1F1731;
            --card-border: #372A4F;
            --header-bg: #110B1D;
            --accent-primary: #9400D3;
            --accent-primary-hover: #7B00B0;
            --accent-secondary: #8A2BE2;
            --accent-error: #F87171;
            --accent-success: #4ADE80;
            --user-bubble-bg: #5B2C7B;
            --user-bubble-text: #ECE4F7;
            --ai-bubble-bg: #372A4F;
            --ai-bubble-text: #ECE4F7;
            --sidebar-bg: #110B1D;
            --sidebar-border: #372A4F;
            --sidebar-item-hover: #1F1731;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(31, 23, 49, 0.9);

            background-image: radial-gradient(at 0% 0%, hsl(270, 60%, 10%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(300, 50%, 10%) 0%, transparent 50%),
                              linear-gradient(to top right, rgba(138, 43, 226, 0.1), transparent),
                              linear-gradient(to bottom left, rgba(148, 0, 211, 0.1), transparent);
            background-size: cover, cover, cover, cover;
            background-position: center center;
            background-attachment: fixed;
        }

        /* Mystic Void Theme: Light Mode */
        body[data-theme="mystic-void-light"] {
            --bg-primary: #F7EDFF;
            --bg-secondary: #FFFFFF;
            --text-primary: #330066;
            --text-secondary: #663399;
            --border-color: #EBD9FC;
            --card-bg: #FFFFFF;
            --card-border: #EBD9FC;
            --header-bg: #F2E0FF;
            --accent-primary: #8A2BE2;
            --accent-primary-hover: #7B1FB2;
            --accent-secondary: #9370DB;
            --accent-error: #EF4444;
            --accent-success: #22C55E;
            --user-bubble-bg: #E6D2F2;
            --user-bubble-text: #4B0082;
            --ai-bubble-bg: #F0E6F8;
            --ai-bubble-text: #330066;
            --sidebar-bg: #FFFFFF;
            --sidebar-border: #EBD9FC;
            --sidebar-item-hover: #F2E0FF;
            --loader-dot-color: var(--accent-primary);
            --main-content-window-bg: rgba(255, 255, 255, 0.8);

            background-image: radial-gradient(at 0% 0%, hsl(270, 30%, 98%) 0%, transparent 50%),
                              radial-gradient(at 100% 100%, hsl(300, 20%, 95%) 0%, transparent 50%);
            background-size: cover;
            background-attachment: fixed;
        }

        /* --- Global Styles & Overrides --- */

        /* Apply theme colors */
        body {
            background-color: var(--bg-primary);
            color: var(--text-primary);
        }

        /* Specific Tailwind overrides for consistency with theme variables */
        .bg-white { background-color: var(--card-bg); }
        .bg-gray-50 { background-color: var(--header-bg); }
        .border-gray-100 { border-color: var(--card-border); }
        .border-gray-200 { border-color: var(--card-border); }
        .text-gray-800 { color: var(--text-primary); }
        .text-gray-900 { color: var(--text-primary); }
        .text-gray-600 { color: var(--text-secondary); }
        .text-gray-700 { color: var(--text-secondary); }
        .bg-gray-200 { background-color: var(--bg-primary); color: var(--text-primary); }
        .hover\:bg-gray-300:hover { background-color: var(--sidebar-item-hover); }
        .bg-gray-100 { background-color: var(--bg-primary); }
        .shadow-2xl { box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25); }
        body[data-theme$="-dark"] .shadow-2xl { box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.45); }
        #error-message { background-color: var(--accent-error); color: white; } /* Light red for error, always visible */
        body[data-theme$="-dark"] #error-message { background-color: var(--accent-error); color: white; }

        /* Custom styles for glowing effects on buttons */
        .glow-button {
            position: relative;
            z-index: 10;
            transition: all 0.4s ease;
            box-shadow: 0 0 10px var(--accent-primary);
            background-color: var(--accent-primary); /* Ensure button uses accent primary directly */
        }
        .glow-button:hover {
            box-shadow: 0 0 15px var(--accent-primary), 0 0 25px var(--accent-primary), 0 0 35px var(--accent-primary);
            transform: translateY(-2px) scale(1.02);
            background-image: linear-gradient(to right, var(--accent-primary), var(--accent-primary-hover));
        }
        
        /* Markdown content styling for better readability (applied to .presentation-output and .chat-message .message-content) */
        .presentation-output h1, .presentation-output h2, .presentation-output h3,
        .chat-message .message-content h1, .chat-message .message-content h2, .chat-message .message-content h3 {
            font-weight: 800; margin-bottom: 0.75em; margin-top: 1.5em; line-height: 1.2; color: var(--accent-primary);
        }
        .presentation-output h1, .chat-message .message-content h1 { font-size: 2.25rem; }
        .presentation-output h2, .chat-message .message-content h2 { font-size: 1.875rem; }
        .presentation-output h3, .chat-message .message-content h3 { font-size: 1.5rem; }
        .presentation-output ul, .presentation-output ol,
        .chat-message .message-content ul, .chat-message .message-content ol {
            list-style-position: inside; margin-left: 1.5em; margin-bottom: 1em;
        }
        .presentation-output li, .chat-message .message-content li { margin-bottom: 0.5em; }
        .presentation-output strong, .chat-message .message-content strong { color: var(--accent-secondary); font-weight: 700; }
        .presentation-output p, .chat-message .message-content p { margin-bottom: 1em; }
        .presentation-output p:last-child, .chat-message .message-content p:last-child { margin-bottom: 0; }

        /* Custom styles for dark mode toggle switch */
        .switch { margin-left: 0.5rem; }
        .slider { background-color: var(--text-secondary); transition: .4s; } /* Use theme secondary text for inactive */
        input:checked + .slider { background-color: var(--accent-primary); }
        input:checked + .slider:before { transform: translateX(24px); }
        .slider:before { background-color: var(--bg-secondary); transition: .4s; } /* Use a lighter background for the thumb */

        /* Custom scrollbar for sleeker look (removed unnecessary chat-input and sidebar-chat-list) */
        #text-input::-webkit-scrollbar,
        #floatingChatInput::-webkit-scrollbar {
            width: 0 !important;
            height: 0 !important;
        }
        #text-input,
        #floatingChatInput {
            -ms-overflow-style: none; /* Internet Explorer and Edge */
            scrollbar-width: none; /* Firefox */
        }

        /* Styles specifically for #presentation-output and #floatingChatHistory scrollbars */
        #presentation-output, #floatingChatHistory {
            overflow-y: auto; /* Ensure vertical scrolling is enabled */
            overflow-x: hidden; /* Keep hidden to prevent horizontal content overflow */
            min-height: 150px; /* Ensure a minimum height for the output area */
            position: relative; /* For positioning copy/dictate buttons */

            /* Firefox scrollbar styles */
            scrollbar-width: thin; /* 'auto' or 'thin' */
            scrollbar-color: var(--accent-primary) var(--sidebar-item-hover); /* thumb color track color */
        }

        /* Webkit (Chrome, Safari, Edge) scrollbar styles for #presentation-output and #floatingChatHistory */
        #presentation-output::-webkit-scrollbar, #floatingChatHistory::-webkit-scrollbar {
            width: 8px; /* Width of the vertical scrollbar */
        }

        #presentation-output::-webkit-scrollbar-track, #floatingChatHistory::-webkit-scrollbar-track {
            background: var(--sidebar-item-hover); /* Background of the scrollbar track */
            border-radius: 10px;
        }

        #presentation-output::-webkit-scrollbar-thumb, #floatingChatHistory::-webkit-scrollbar-thumb {
            background-color: var(--accent-primary); /* Color of the scrollbar thumb */
            border-radius: 10px; /* Rounded corners for the thumb */
            border: 2px solid var(--sidebar-item-hover); /* Creates a border effect and separates from track */
        }

        #presentation-output::-webkit-scrollbar-thumb:hover, #floatingChatHistory::-webkit-scrollbar-thumb:hover {
            background-color: var(--accent-primary-hover); /* Darker thumb on hover */
        }
        
        /* Modern loading animation */
        .loader-container { display: flex; justify-content: center; align-items: center; width: 100%; height: 100%; }
        .loader-dot {
            width: 12px; height: 12px; margin: 0 4px;
            background-color: var(--loader-dot-color);
            border-radius: 50%; display: inline-block;
            animation: bounce 1.4s infinite ease-in-out both;
        }
        .loader-dot:nth-child(1) { animation-delay: -0.32s; }
        .loader-dot:nth-child(2) { animation-delay: -0.16s; }
        .loader-dot:nth-child(3) { animation-delay: 0s; }
        
        @keyframes bounce {
            0%, 80%, 100% { transform: scale(0); opacity: 0.5; }
            40% { transform: scale(1.0); opacity: 1; }
        }

        /* Main Content Window Styling (adapted from original #main-chat-window) */
        #main-content-window { /* Renamed from #main-chat-window */
            flex: 1;
            max-width: 100%;
            min-height: 100vh;
            height: 100vh; /* Critical for full height */
            display: flex;
            flex-direction: column;
            background-color: var(--main-content-window-bg); /* Use theme variable for transparency */
            border-radius: 0;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            border-left: 1px solid var(--border-color); /* Use theme border color */
            transition: all 0.3s ease-in-out;
            backdrop-filter: blur(8px);
            -webkit-backdrop-filter: blur(8px);
        }
        body[data-theme$="-dark"] #main-content-window { /* Renamed */
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.45);
        }

        /* Sidebar Styling (kept as is) */
        #sidebar {
            width: 280px;
            min-width: 280px;
            background-color: var(--sidebar-bg);
            border-right: 1px solid var(--sidebar-border);
            display: flex;
            flex-direction: column;
            padding: 1rem;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
            position: relative;
            z-index: 30;
            height: 100vh;
            overflow-y: auto;
            transition: transform 0.3s ease-out, box-shadow 0.3s ease-out;
        }
        #sidebar.hidden-mobile {
            transform: translateX(-100%);
            position: absolute;
            left: 0;
            box-shadow: none;
        }
        @media (min-width: 768px) { /* md breakpoint */
            body {
                justify-content: flex-start;
                align-items: stretch;
            }
            #sidebar {
                position: relative;
                transform: translateX(0%);
                border-radius: 0;
            }
            #sidebar.hidden-mobile {
                transform: translateX(0%);
                position: relative;
            }
            #main-content-window { /* Renamed */
                max-width: none;
                border-radius: 0;
            }
            #hamburger-menu-button { display: none !important; }
        }
        
        /* New styling for the presentation output area */
        .presentation-output {
            padding: 1.5rem;
            background-color: var(--card-bg);
            color: var(--text-primary);
            border-radius: 1rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            margin-bottom: 1rem;
            line-height: 1.6;
            overflow-wrap: break-word;
        }

        /* Code block specific styling (adapted for .presentation-output AND chat messages) */
        .presentation-output .code-block-container,
        .chat-message .code-block-container {
            position: relative; 
            background-color: var(--bg-secondary); /* Themed */
            color: var(--text-primary); /* Themed */
            border-radius: 0.75rem; margin-top: 1rem; margin-bottom: 1rem;
            overflow: hidden; 
            border: 1px solid var(--border-color); /* Themed */
            box-shadow: 0 4px 8px rgba(0,0,0,0.3);
        }
        .presentation-output .code-block-container pre,
        .chat-message .code-block-container pre {
            margin: 0; padding: 1rem; overflow-x: auto;
            font-family: 'Fira Code', 'Cascadia Code', 'Consolas', monospace;
            font-size: 0.9em; line-height: 1.4;
        }
        .presentation-output .code-block-header,
        .chat-message .code-block-header {
            display: flex; justify-content: space-between; align-items: center;
            background-color: var(--header-bg); /* Themed */
            color: var(--text-secondary); /* Themed */
            padding: 0.5rem 1rem;
            border-bottom: 1px solid var(--border-color); /* Themed */
            font-size: 0.85em;
            border-top-left-radius: 0.75rem; border-top-right-radius: 0.75rem;
        }
        .presentation-output .code-block-copy-button,
        .chat-message .code-block-copy-button {
            background-color: transparent; border: none; color: var(--text-secondary); /* Themed */
            cursor: pointer; padding: 0.25rem 0.5rem; border-radius: 0.375rem;
            transition: background-color 0.2s ease, color 0.2s ease;
            display: flex; align-items: center; gap: 0.25rem; font-size: 0.85em;
        }
        .presentation-output .code-block-copy-button:hover,
        .chat-message .code-block-copy-button:hover { background-color: var(--sidebar-item-hover); color: var(--text-primary); } /* Themed */
        .presentation-output .code-block-copy-button:active,
        .chat-message .code-block-copy-button:active { transform: scale(0.95); }

        /* Smallest font size for inline code blocks if any */
        .presentation-output code:not(pre > code),
        .chat-message .message-content code:not(pre > code) {
            background-color: color-mix(in srgb, var(--accent-primary) 15%, transparent); /* Themed */
            border-radius: 0.25rem;
            padding: 0.2em 0.4em; font-family: 'Fira Code', 'Cascadia Code', 'Consolas', monospace;
            font-size: 0.9em; color: var(--accent-primary); /* Themed */
        }

        /* Ensure links are distinguishable */
        .presentation-output a,
        .chat-message .message-content a {
            color: var(--accent-primary); text-decoration: underline; transition: color 0.2s ease;
        }
        .presentation-output a:hover,
        .chat-message .message-content a:hover { color: var(--accent-primary-hover); }

        /* Styling for the copy message */
        #copy-message {
            position: fixed; bottom: 2rem; left: 50%; transform: translateX(-50%);
            padding: 0.75rem 1.5rem; background-color: var(--accent-success); color: white;
            border-radius: 9999px; box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            opacity: 0; visibility: hidden; transition: all 0.5s ease-in-out; z-index: 100;
        }
        #copy-message.show { opacity: 1; visibility: visible; bottom: 4rem; }

        /* Responsive menu button for sidebar */
        #hamburger-menu-button {
            display: flex;
            margin-right: 1rem;
            align-items: center;
            justify-content: center;
            width: 2.5rem;
            height: 2.5rem;
            border-radius: 0.5rem;
            background-color: var(--header-bg);
            border: 1px solid var(--border-color);
            color: var(--text-primary);
            cursor: pointer;
            transition: background-color 0.2s;
        }
        #hamburger-menu-button:hover {
            background-color: var(--sidebar-item-hover);
        }

        /* Overlay for mobile sidebar */
        .sidebar-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0,0,0,0.5);
            z-index: 29;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease-out, visibility 0.3s ease-out;
        }
        .sidebar-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        /* Output Message Actions - positioned inside presentation-output for scrolling with content */
        .output-message-actions {
            position: absolute; 
            top: 1rem; 
            right: 1rem; 
            display: flex; 
            gap: 0.5rem;
            padding: 0.25rem 0.5rem; 
            background-color: var(--header-bg); 
            border-radius: 0.75rem; 
            backdrop-filter: blur(5px); 
            z-index: 10;
            border: 1px solid var(--border-color);
            opacity: 1; /* Always visible for presentation site */
        }
        .output-message-actions button {
            background: none; border: none; cursor: pointer; padding: 0.25rem;
            border-radius: 0.375rem; transition: background-color 0.2s ease, color 0.2s ease;
            display: flex; align-items: center; justify-content: center;
        }
        .output-message-actions button .lucide { color: var(--text-secondary); width: 1rem; height: 1rem; }
        .output-message-actions button:hover .lucide { color: var(--text-primary); }
        .output-message-actions button:hover { background-color: var(--sidebar-item-hover); }

        /* --- Floating Chatbot Specific Styles --- */
        #floating-chatbot-toggle-btn {
            position: fixed;
            bottom: 1.5rem;
            right: 1.5rem;
            width: 3.5rem;
            height: 3.5rem;
            border-radius: 50%;
            background-color: var(--accent-primary);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
            cursor: pointer;
            z-index: 40; /* Above everything else */
            transition: all 0.3s ease-in-out;
            outline: none;
            border: none;
        }
        #floating-chatbot-toggle-btn:hover {
            background-color: var(--accent-primary-hover);
            transform: scale(1.05);
        }
        #floating-chatbot-toggle-btn.active {
            transform: rotate(135deg); /* Plus to X */
        }

        #floating-chatbot-window {
            position: fixed;
            bottom: 6rem; /* Above the toggle button */
            right: 1.5rem;
            width: 90%;
            max-width: 400px; /* Standard chatbot width */
            height: 70%;
            max-height: 600px;
            background-color: var(--main-content-window-bg);
            border-radius: 1rem;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4);
            display: flex;
            flex-direction: column;
            z-index: 40; /* Same as toggle button, or slightly higher */
            transition: all 0.3s ease-in-out;
            transform: translateY(20px);
            opacity: 0;
            visibility: hidden;
            backdrop-filter: blur(8px);
            -webkit-backdrop-filter: blur(8px);
            border: 1px solid var(--border-color);
        }
        #floating-chatbot-window.open {
            transform: translateY(0);
            opacity: 1;
            visibility: visible;
        }

        #floatingChatHeader {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem 1rem;
            border-bottom: 1px solid var(--border-color);
            background-color: var(--header-bg);
            border-top-left-radius: 1rem;
            border-top-right-radius: 1rem;
        }
        #floatingChatHeader h3 {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--text-primary);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        #floatingChatHeader button {
            background: none;
            border: none;
            color: var(--text-secondary);
            cursor: pointer;
            padding: 0.25rem;
            border-radius: 0.375rem;
            transition: background-color 0.2s;
        }
        #floatingChatHeader button:hover {
            background-color: var(--sidebar-item-hover);
        }
        
        #floatingChatHistory {
            flex: 1;
            padding: 1rem;
            overflow-y: auto;
        }

        #floatingChatInputAreaContainer {
            padding: 1rem;
            border-top: 1px solid var(--border-color);
            background-color: var(--header-bg);
            border-bottom-left-radius: 1rem;
            border-bottom-right-radius: 1rem;
            position: relative;
        }
        #floatingChatInputAreaContainer.drag-over-active {
            border: 2px dashed var(--accent-primary);
            box-shadow: 0 0 20px var(--accent-primary), 0 0 30px var(--accent-primary) inset;
        }

        .chat-message {
            margin-bottom: 0.75rem; padding: 1rem; border-radius: 1.5rem;
            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
            word-break: break-word; transition: all 0.3s ease; transform: scale(0.95);
            transform-origin: bottom; max-width: 85%; position: relative; padding-bottom: 2.5rem;
        }

        .chat-message.user {
            background-color: var(--user-bubble-bg); color: var(--user-bubble-text);
            margin-left: auto; border-bottom-right-radius: 0.5rem;
            background-image: linear-gradient(to bottom right, var(--user-bubble-bg), color-mix(in srgb, var(--user-bubble-bg) 80%, var(--accent-primary) 20%));
        }

        .chat-message.ai {
            background-color: var(--ai-bubble-bg); color: var(--ai-bubble-text);
            margin-right: auto; border-bottom-left-radius: 0.5rem;
            background-image: linear-gradient(to bottom left, var(--ai-bubble-bg), color-mix(in srgb, var(--ai-bubble-bg) 80%, var(--border-color) 20%));
        }

        .chat-image { max-width: 100%; height: auto; border-radius: 0.75rem; margin-top: 0.5rem; display: block; }
        .chat-attachment-preview-item {
            display: flex; align-items: center; gap: 0.5rem; padding: 0.5rem 0.75rem;
            border-radius: 1rem; background-color: color-mix(in srgb, var(--accent-primary) 15%, transparent);
            color: var(--accent-primary); font-size: 0.875rem; box-shadow: 0 1px 2px rgba(0,0,0,0.08);
            transition: all 0.2s ease;
        }
        .chat-attachment-preview-item .remove-attachment-btn {
            background: none; border: none; color: var(--accent-primary); cursor: pointer;
            padding: 0.1rem; border-radius: 50%; transition: background-color 0.2s ease;
        }
        .chat-attachment-preview-item .remove-attachment-btn:hover {
            background-color: color-mix(in srgb, var(--accent-primary) 20%, transparent);
        }

        .message-actions {
            position: absolute; bottom: 0.5rem; right: 1rem; display: flex; gap: 0.5rem;
            padding: 0.25rem 0.5rem; background-color: var(--header-bg); /* Use a themed background for the actions panel */
            border-radius: 0.75rem; backdrop-filter: blur(5px); transition: opacity 0.3s ease;
            opacity: 0; z-index: 10;
            border: 1px solid var(--border-color);
        }
        .chat-message:hover .message-actions { opacity: 1; }
        .message-actions button {
            background: none; border: none; cursor: pointer; padding: 0.25rem;
            border-radius: 0.375rem; transition: background-color 0.2s ease, color 0.2s ease;
            display: flex; align-items: center; justify-content: center;
        }
        .message-actions button .lucide { color: var(--text-secondary); width: 1rem; height: 1rem; }
        .message-actions button:hover .lucide { color: var(--text-primary); }
        .message-actions button:hover { background-color: var(--sidebar-item-hover); } /* Themed hover */
        .chat-message.user .message-actions { right: 1rem; left: auto; }
        .chat-message.ai .message-actions { left: 1rem; right: auto; }

        /* New style for speech recognition button when active */
        .voice-input-active {
            background-color: var(--accent-error) !important;
            animation: pulse-red 1s infinite cubic-bezier(0.4, 0, 0.6, 1);
        }
        @keyframes pulse-red {
            0%, 100% { box-shadow: 0 0 0 0 color-mix(in srgb, var(--accent-error) 70%, transparent); }
            50% { box-shadow: 0 0 0 10px color-mix(in srgb, var(--accent-error) 0%, transparent); }
        }

        /* Sidebar Beautifier list item styling */
        .sidebar-beautifier-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0.75rem 1rem;
            border-radius: 0.75rem;
            cursor: pointer;
            transition: background-color 0.2s ease, color 0.2s ease;
            color: var(--text-secondary);
            margin-bottom: 0.5rem;
            text-align: left;
        }
        .sidebar-beautifier-item:hover {
            background-color: var(--sidebar-item-hover);
            color: var(--text-primary);
        }
        .sidebar-beautifier-item.active {
            background-color: var(--accent-primary);
            color: white;
            font-weight: 600;
        }
        .sidebar-beautifier-item.active .lucide {
            color: white;
        }
        .sidebar-beautifier-item.active:hover {
            background-color: var(--accent-primary-hover);
        }
        .sidebar-beautifier-item-content {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            flex-grow: 1;
            min-width: 0;
        }
        .sidebar-beautifier-item-title {
            flex-grow: 1;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            min-width: 0;
        }
        .sidebar-beautifier-item-actions {
            display: flex;
            gap: 0.25rem;
            flex-shrink: 0;
            opacity: 0;
            transition: opacity 0.2s ease;
        }
        .sidebar-beautifier-item:hover .sidebar-beautifier-item-actions {
            opacity: 1;
        }
        .sidebar-beautifier-item-actions button {
            background: none;
            border: none;
            padding: 0.25rem;
            border-radius: 0.375rem;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }
        .sidebar-beautifier-item-actions button .lucide {
            width: 1rem;
            height: 1rem;
            color: var(--text-secondary);
        }
        .sidebar-beautifier-item-actions button:hover {
            background-color: var(--sidebar-item-hover);
        }
        .sidebar-beautifier-item.active .sidebar-beautifier-item-actions button .lucide {
            color: white;
        }

        /* Responsive adjustments for chatbot window */
        @media (max-width: 767px) { /* Adjust for smaller screens */
            #floating-chatbot-window {
                width: calc(100% - 2rem); /* 1rem padding on each side */
                left: 1rem;
                right: 1rem;
                max-width: none;
                height: 80%; /* Take up more height on small screens */
                bottom: 5.5rem;
            }
            #floating-chatbot-toggle-btn {
                bottom: 1rem;
                right: 1rem;
                width: 3rem;
                height: 3rem;
                font-size: 1.2rem;
            }
        }

    </style>
</head>
<body class="antialiased" data-theme="default-dark">

    <!-- Overlay for mobile sidebar -->
    <div class="sidebar-overlay" id="sidebar-overlay"></div>

    <!-- Main Sidebar -->
    <aside id="sidebar" class="hidden-mobile">
        <div class="flex items-center justify-between pb-4 border-b border-[var(--sidebar-border)] mb-4">
            <h2 class="text-xl font-bold flex items-center gap-2" style="color: var(--text-primary);">
                <span data-lucide="sparkles" class="w-6 h-6" style="color: var(--accent-primary);"></span> AI Text Beautifier
            </h2>
            <button id="close-sidebar-btn" aria-label="Close Sidebar" title="Close Sidebar" class="md:hidden" style="color: var(--text-secondary); background-color: transparent; border: none;">
                <span data-lucide="x" class="w-6 h-6"></span>
            </button>
        </div>

        <!-- New Beautification Session Button -->
        <button id="new-beautifier-session-button" class="w-full flex items-center justify-center p-3 rounded-xl font-semibold shadow-lg transition-colors mb-4 glow-button" style="background-color: var(--accent-primary); color: white;">
            <span data-lucide="plus" class="w-5 h-5 mr-2"></span> New Beautification
        </button>

        <!-- Previous Beautification Sessions Section -->
        <div class="flex-1 overflow-y-auto mb-4">
            <h3 class="text-sm font-semibold uppercase" style="color: var(--text-secondary);">Saved Beautifications</h3>
            <ul id="sidebar-beautifier-list" class="space-y-1">
                <!-- Beautifier session items will be dynamically loaded here -->
            </ul>
        </div>

        <!-- Theme Selector -->
        <div class="mt-auto pt-4 border-t border-[var(--sidebar-border)]">
            <h3 class="text-sm font-semibold uppercase" style="color: var(--text-secondary);">Themes</h3>
            <select id="app-theme-select-sidebar" class="w-full p-2 rounded-md border text-sm focus:ring-[var(--accent-primary)] focus:border-[var(--accent-primary)]" style="background-color: var(--card-bg); border-color: var(--border-color); color: var(--text-primary);" aria-label="Select App Theme">
                <option value="default">Small AI v2 (Default)</option>
                <option value="celestial-horizon">Celestial Horizon</option>
                <option value="verdant-calm">Verdant Calm</option>
                <option value="cybernetic-pulse">Cybernetic Pulse</option>
                <option value="urban-pulse">Urban Pulse</option>
                <option value="rustic-ember">Rustic Ember</option>
                <option value="neon-mirage">Neon Mirage</option>
                <option value="ivory-bloom">Ivory Bloom</option>
                <option value="obsidian-night">Obsidian Night</option>
                <option value="solar-dawn">Solar Dawn</option>
                <option value="aurora-drift">Aurora Drift</option>
                <option value="timeless-echo">Timeless Echo</option>
                <option value="mystic-void">Mystic Void</option>
            </select>
        </div>
        <!-- Removed Version Selector as it's not relevant for this app's purpose -->
    </aside>

    <!-- Main Content Container (Text Beautifier) -->
    <div id="main-content-window" class="min-w-0">
        <!-- Header -->
        <div class="flex justify-between items-center p-4 border-b border-[var(--border-color)]" style="background-color: var(--header-bg);">
            <div class="flex items-center">
                <!-- Hamburger menu button for mobile -->
                <button id="hamburger-menu-button" aria-label="Open Sidebar Menu" title="Open Menu" style="background-color: var(--header-bg); border-color: var(--border-color); color: var(--text-primary);">
                    <span data-lucide="menu" class="w-6 h-6"></span>
                </button>
                <h1 class="text-xl font-bold flex items-center gap-2" style="color: var(--text-primary);">
                    <span data-lucide="sparkles" class="w-6 h-6" style="color: var(--accent-primary);"></span> Text Beautifier
                </h1>
            </div>
            <!-- Dark Mode Toggle -->
            <div class="flex items-center gap-2">
                <span class="text-sm" style="color: var(--text-secondary);">Dark Mode</span>
                <label class="switch relative inline-block w-14 h-8">
                    <input type="checkbox" id="dark-mode-toggle" class="opacity-0 w-0 h-0">
                    <span class="slider absolute cursor-pointer top-0 left-0 right-0 bottom-0 rounded-full before:absolute before:content-[''] before:h-6 before:w-6 before:left-1 before:bottom-1 before:rounded-full"></span>
                </label>
            </div>
        </div>
        
        <!-- Input and Output Area -->
        <div class="p-4 overflow-y-auto flex-1 flex flex-col w-full"> <!-- Removed max-w-3xl and mx-auto here -->
            <div class="mb-6">
                <label for="text-input" class="block text-sm font-medium mb-2" style="color: var(--text-primary);">Enter your text here:</label>
                <textarea id="text-input" class="w-full p-3 rounded-2xl border focus:ring-2 focus:ring-[var(--accent-primary)] focus:border-[var(--accent-primary)] transition-colors shadow-sm min-w-0 resize-y min-h-[120px] max-h-[400px] overflow-y-auto" placeholder="Type or paste any text (plain text, notes, or even existing Markdown) to have it beautifully formatted by AI." rows="5" style="background-color: var(--card-bg); border-color: var(--border-color); color: var(--text-primary);"></textarea>
                <button id="beautify-button" aria-label="Beautify Text" class="w-full mt-4 flex items-center justify-center p-3 rounded-xl font-semibold shadow-lg transition-colors glow-button disabled:opacity-50 disabled:cursor-not-allowed" style="background-color: var(--accent-primary); color: white;">
                    <span data-lucide="wand" class="w-5 h-5 mr-2"></span> Beautify Text
                </button>
            </div>

            <div class="mb-4">
                <h2 class="text-xl font-bold mb-2" style="color: var(--text-primary);">AI Beautified Output</h2>
                <div id="presentation-output" class="presentation-output w-full p-4 overflow-y-auto min-h-[150px] relative" style="background-color: var(--card-bg); border-color: var(--border-color); color: var(--text-primary);">
                    <p style="color: var(--text-secondary);">Your beautifully formatted text will appear here.</p>
                    <div class="output-message-actions">
                        <button class="copy-output-btn" title="Copy Output">
                            <span data-lucide="clipboard" class="w-4 h-4"></span>
                        </button>
                        <button class="dictate-output-btn" title="Dictate Output">
                            <span data-lucide="volume-2" class="w-4 h-4"></span>
                        </button>
                    </div>
                </div>
                <div id="output-loading" class="hidden">
                    <div class="loader-container h-8">
                        <div class="loader-dot"></div>
                        <div class="loader-dot"></div>
                        <div class="loader-dot"></div>
                    </div>
                    <span class="mt-2 block">AI is beautifying...</span>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Floating Chatbot Toggle Button -->
    <button id="floating-chatbot-toggle-btn" aria-label="Toggle Chatbot" title="Toggle AI Chatbot">
        <span data-lucide="message-circle" class="w-7 h-7"></span>
    </button>

    <!-- Floating Chatbot Window -->
    <div id="floating-chatbot-window">
        <div id="floatingChatHeader">
            <h3><span data-lucide="bot" class="w-5 h-5" style="color: var(--accent-primary);"></span> AI Assistant</h3>
            <div class="flex items-center gap-1">
                <button id="floatingNewChatButton" aria-label="Start New Chat" title="Start a New Chat">
                    <span data-lucide="plus-circle" class="w-5 h-5"></span>
                </button>
                <button id="floatingChatCloseBtn" aria-label="Close Chat" title="Close Chat">
                    <span data-lucide="x" class="w-5 h-5"></span>
                </button>
            </div>
        </div>
        
        <div id="floatingChatHistory" class="flex-1 flex flex-col">
            <!-- Chat messages will be appended here -->
        </div>
        
        <div id="floatingChatInputAreaContainer" class="relative">
            <!-- Attachment preview -->
            <div id="floatingChatAttachmentsPreviewContainer" class="mb-2 flex flex-wrap items-center gap-2 hidden">
                <!-- Attachments previews will be dynamically added here -->
            </div>

            <div class="flex gap-2 items-end flex-wrap">
                <!-- Voice Input Button -->
                <button id="floatingVoiceInputBtn" aria-label="Voice Input" title="Voice Input (Speech-to-Text)" class="flex items-center justify-center w-12 h-12 rounded-full shadow-lg cursor-pointer transition-all duration-300 flex-shrink-0" style="background-color: var(--bg-secondary); color: var(--text-secondary);">
                    <span data-lucide="mic" class="w-5 h-5"></span>
                </button>
                
                <!-- Attach File Button -->
                <label for="floating-chat-file-upload" aria-label="Attach File" title="Attach Files" class="flex items-center justify-center w-12 h-12 rounded-full shadow-lg cursor-pointer transition-all duration-300 flex-shrink-0" style="background-color: var(--bg-secondary); color: var(--text-secondary);">
                    <span data-lucide="paperclip" class="w-5 h-5"></span>
                </label>
                <input type="file" id="floating-chat-file-upload" accept="image/*, .txt, .pdf, .csv, .json, .xml, .md" class="hidden" multiple>

                <textarea id="floatingChatInput" class="flex-1 p-3 rounded-2xl border focus:ring-2 focus:ring-[var(--accent-primary)] focus:border-[var(--accent-primary)] transition-colors shadow-sm min-w-0 resize-none max-h-[120px] overflow-y-auto" placeholder="Ask anything or attach a file..." rows="1" style="background-color: var(--card-bg); border-color: var(--border-color); color: var(--text-primary);"></textarea>
                
                <button id="floatingSendChatBtn" aria-label="Send Message" class="flex items-center justify-center w-12 h-12 rounded-full shadow-lg focus:outline-none focus:ring-4 focus:ring-[var(--accent-primary)] transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed glow-button flex-shrink-0" style="background-color: var(--accent-primary); color: white;">
                    <span data-lucide="send" class="w-5 h-5"></span>
                </button>
            </div>
        </div>
    </div>

    <!-- Temporary message for clipboard copy -->
    <div id="copy-message">Text copied to clipboard!</div>

    <script type="text/javascript">
        // Register Service Worker for PWA capabilities (requires sw.js file)
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', () => {
                navigator.serviceWorker.register('/sw.js')
                    .then(registration => {
                        console.log('ServiceWorker registration successful with scope: ', registration.scope);
                    })
                    .catch(err => {
                        console.log('ServiceWorker registration failed: ', err);
                    });
            });
        }

        const createIcons = () => {
            if (typeof lucide !== 'undefined') {
                lucide.createIcons();
            }
        };

        // DOM elements - Text Beautifier
        const sidebar = document.getElementById('sidebar');
        const sidebarOverlay = document.getElementById('sidebar-overlay');
        const closeSidebarBtn = document.getElementById('close-sidebar-btn');
        const hamburgerMenuButton = document.getElementById('hamburger-menu-button');
        const mainContentWindow = document.getElementById('main-content-window');
        const darkModeToggle = document.getElementById('dark-mode-toggle');
        const appThemeSelect = document.getElementById('app-theme-select-sidebar');
        const newBeautifierSessionButton = document.getElementById('new-beautifier-session-button');
        const sidebarBeautifierList = document.getElementById('sidebar-beautifier-list');

        const textInput = document.getElementById('text-input');
        const beautifyButton = document.getElementById('beautify-button');
        const presentationOutputDiv = document.getElementById('presentation-output');
        const outputLoadingDiv = document.getElementById('output-loading');
        const copyOutputBtn = document.querySelector('.copy-output-btn');
        const dictateOutputBtn = document.querySelector('.dictate-output-btn');

        const copyMessage = document.getElementById('copy-message');

        const errorContainer = document.createElement('div');
        errorContainer.id = 'error-message';
        errorContainer.classList.add('hidden', 'px-6', 'py-4', 'rounded-xl', 'relative', 'shadow-md', 'my-4', 'fixed', 'top-4', 'left-1/2', '-translate-x-1/2', 'z-50', 'w-11/12', 'max-w-md');
        const errorText = document.createElement('span');
        errorText.id = 'error-text';
        errorText.classList.add('block', 'sm:inline');
        errorContainer.appendChild(errorText);
        document.body.appendChild(errorContainer);

        // DOM elements - Floating Chatbot
        const floatingChatbotToggleBtn = document.getElementById('floating-chatbot-toggle-btn');
        const floatingChatbotWindow = document.getElementById('floating-chatbot-window');
        const floatingChatHeader = document.getElementById('floatingChatHeader');
        const floatingChatCloseBtn = document.getElementById('floatingChatCloseBtn');
        const floatingNewChatButton = document.getElementById('floatingNewChatButton');
        const floatingChatHistoryDiv = document.getElementById('floatingChatHistory');
        const floatingChatInput = document.getElementById('floatingChatInput');
        const floatingSendChatBtn = document.getElementById('floatingSendChatBtn');
        const floatingChatFileUpload = document.getElementById('floating-chat-file-upload');
        const floatingChatAttachmentsPreviewContainer = document.getElementById('floatingChatAttachmentsPreviewContainer');
        const floatingVoiceInputBtn = document.getElementById('floatingVoiceInputBtn');
        const floatingChatInputAreaContainer = document.getElementById('floatingChatInputAreaContainer'); // Parent for drag/drop


        // --- Global State and Constants ---
        const BEAUTIFIER_SESSIONS_KEY = 'beautifier_sessions';
        const CURRENT_BEAUTIFIER_SESSION_ID_KEY = 'current_beautifier_session_id';
        const FLOATING_CHAT_HISTORY_KEY = 'floating_chat_history'; // For the single floating chat conversation
        const THEME_STORAGE_KEY = 'app_selected_theme';
        const MODE_STORAGE_KEY = 'app_theme_mode';
        const DEFAULT_THEME_NAME = 'default';
        const DEFAULT_MODE = 'dark';

        let allBeautifierSessions = {}; // Maps session ID to {id, title, inputText, outputHTML, timestamp}
        let currentBeautifierSessionId = null;

        let floatingChatHistory = []; // Array of chat messages for the floating chatbot
        let floatingChatAttachments = []; // Attachments for the floating chatbot's current input

        let currentThemeName = DEFAULT_THEME_NAME;
        let currentMode = DEFAULT_MODE;

        // Web Speech API related variables (shared or separate)
        let beautifierUtterance = null;
        let beautifierIsSpeaking = false;
        let floatingChatUtterance = null;
        let floatingChatIsSpeaking = false;
        let floatingMessageTextCache = new Map(); // Store message content for floating chat copy/dictate

        // Speech Recognition variables for floating chatbot
        let SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
        let floatingRecognition = null;
        let floatingIsVoiceInputActive = false;
        let floatingFinalTranscript = '';

        // Initialize SpeechRecognition if available for the floating chatbot
        if (SpeechRecognition) {
            floatingRecognition = new SpeechRecognition();
            floatingRecognition.continuous = true;
            floatingRecognition.interimResults = true;
            floatingRecognition.lang = 'en-US';

            floatingRecognition.onstart = () => {
                floatingIsVoiceInputActive = true;
                floatingVoiceInputBtn.classList.add('voice-input-active');
                updateButtonIcon(floatingVoiceInputBtn, 'mic-off', 'w-5 h-5');
                floatingChatInput.placeholder = 'Listening... Speak now.';
                floatingFinalTranscript = '';
                floatingChatInput.dataset.initialText = floatingChatInput.value;
            };

            floatingRecognition.onresult = (event) => {
                let interimTranscript = '';
                for (let i = event.resultIndex; i < event.results.length; ++i) {
                    if (event.results[i].isFinal) {
                        floatingFinalTranscript += event.results[i][0].transcript + ' ';
                    } else {
                        interimTranscript += event.results[i][0].transcript;
                    }
                }
                floatingChatInput.value = (floatingChatInput.dataset.initialText || '') + floatingFinalTranscript + interimTranscript;
                adjustFloatingChatInputHeight();
                floatingChatInput.scrollLeft = floatingChatInput.scrollWidth;
            };

            floatingRecognition.onend = () => {
                floatingIsVoiceInputActive = false;
                floatingVoiceInputBtn.classList.remove('voice-input-active');
                updateButtonIcon(floatingVoiceInputBtn, 'mic', 'w-5 h-5');
                floatingChatInput.placeholder = 'Ask anything or attach a file...';
                
                if (floatingFinalTranscript.trim() !== '') {
                    floatingChatInput.value = (floatingChatInput.dataset.initialText || '') + floatingFinalTranscript.trim();
                    floatingChatInput.dataset.initialText = floatingChatInput.value;
                } else if (floatingChatInput.value.trim() === (floatingChatInput.dataset.initialText || '').trim()) {
                    // No new speech, keep existing text
                } else {
                    floatingChatInput.value = floatingChatInput.dataset.initialText || '';
                }
                adjustFloatingChatInputHeight();
            };

            floatingRecognition.onerror = (event) => {
                floatingIsVoiceInputActive = false;
                floatingVoiceInputBtn.classList.remove('voice-input-active');
                updateButtonIcon(floatingVoiceInputBtn, 'mic', 'w-5 h-5');
                floatingChatInput.placeholder = 'Ask anything or attach a file...';
                console.error('Speech recognition error (floating chatbot):', event.error);
                if (event.error === 'not-allowed') {
                    showError('Microphone access denied for chatbot. Please allow microphone access in your browser settings.');
                } else if (event.error === 'no-speech') {
                    console.log('No speech detected for chatbot, recognition ended.');
                    floatingChatInput.value = floatingChatInput.dataset.initialText || '';
                } else if (event.error === 'network') {
                    showError('Chatbot speech recognition network error. This often means a firewall, proxy, or browser extension is blocking access to Google\'s speech services. Please try disabling extensions or testing in incognito mode.');
                } else {
                    showError(`Chatbot speech recognition error: ${event.error}`);
                }
                adjustFloatingChatInputHeight();
            };
        } else {
            console.warn('Web Speech API (SpeechRecognition) not supported in this browser. Floating voice input button will be hidden.');
            if (floatingVoiceInputBtn) {
                floatingVoiceInputBtn.style.display = 'none';
            }
        }


        // --- Theme Management ---
        function applyTheme(themeName, mode) {
            currentThemeName = themeName;
            currentMode = mode;
            document.body.dataset.theme = `${themeName}-${mode}`;
            localStorage.setItem(THEME_STORAGE_KEY, themeName);
            localStorage.setItem(MODE_STORAGE_KEY, mode);
            darkModeToggle.checked = (mode === 'dark');
            if (appThemeSelect && appThemeSelect.value !== themeName) {
                appThemeSelect.value = themeName;
            }
        }

        // Initialize Theme
        const storedThemeName = localStorage.getItem(THEME_STORAGE_KEY) || DEFAULT_THEME_NAME;
        const storedMode = localStorage.getItem(MODE_STORAGE_KEY) || DEFAULT_MODE;
        applyTheme(storedThemeName, storedMode);

        // Event listener for Dark/Light Mode Toggle
        darkModeToggle.addEventListener('change', () => {
            const newMode = darkModeToggle.checked ? 'dark' : 'light';
            applyTheme(currentThemeName, newMode);
        });

        // Event listener for Theme Selector
        if (appThemeSelect) {
            appThemeSelect.addEventListener('change', (event) => {
                const newThemeName = event.target.value;
                applyTheme(newThemeName, currentMode);
            });
        }

        // --- Shared Utility Functions ---

        function generateUniqueId() {
            return Date.now().toString(36) + Math.random().toString(36).substr(2, 9);
        }

        // Function to display an error message
        function showError(message) {
            errorText.textContent = message;
            errorContainer.classList.remove('hidden');
            setTimeout(() => {
                errorContainer.classList.add('hidden');
            }, 5000); // Hide after 5 seconds
        }

        /**
         * Helper function to update a Lucide icon displayed within a button.
         * Removes the existing SVG and adds a new span for Lucide to convert.
         * @param {HTMLElement} buttonElement The button element containing the icon.
         * @param {string} newIconName The Lucide icon name (e.g., 'check', 'clipboard').
         * @param {string} [classList] Optional additional classes for the new span. Defaults to 'w-4 h-4' for action buttons.
         */
        function updateButtonIcon(buttonElement, newIconName, classList = 'w-4 h-4') {
            let currentIconSvg = buttonElement.querySelector('.lucide');
            if (currentIconSvg) {
                currentIconSvg.remove();
            }

            const newIconSpan = document.createElement('span');
            newIconSpan.setAttribute('data-lucide', newIconName);
            newIconSpan.className = classList;

            buttonElement.appendChild(newIconSpan);
           
            createIcons(); // Re-render Lucide icons
        }

        // Helper function to copy text to clipboard
        function copyToClipboard(text) { 
            if (navigator.clipboard && navigator.clipboard.writeText) {
                navigator.clipboard.writeText(text)
                    .then(() => {
                        showCopyMessage();
                    })
                    .catch(err => {
                        console.error('Failed to copy: ', err);
                        showError('Failed to copy text. Please copy manually.');
                    });
            } else { // Fallback for browsers without Clipboard API
                const tempTextArea = document.createElement('textarea');
                tempTextArea.value = text;
                document.body.appendChild(tempTextArea);
                tempTextArea.select();
                try {
                    document.execCommand('copy');
                    showCopyMessage();
                } catch (err) {
                    console.error('Failed to copy (fallback):', err);
                    showError('Failed to copy text. Please copy manually.');
                }
                document.body.removeChild(tempTextArea);
            }
        }

        // Function to show a temporary message for clipboard copy
        function showCopyMessage(message = 'Text copied to clipboard!', bgColor = 'var(--accent-success)') {
            copyMessage.textContent = message;
            copyMessage.style.backgroundColor = bgColor;
            copyMessage.classList.add('show');
            setTimeout(() => {
                copyMessage.classList.remove('show');
            }, 3000);
        }

        // Helper function for text-to-speech (generic, takes specific utterance and speaking state)
        function toggleSpeech(text, buttonElement, type = 'beautifier') {
            if (!window.speechSynthesis) {
                showError('Speech synthesis not supported in this browser.');
                return;
            }

            let currentSpeakingState;
            let currentUtteranceRef;
            let updateSpeakingState;

            if (type === 'beautifier') {
                currentSpeakingState = beautifierIsSpeaking;
                currentUtteranceRef = beautifierUtterance;
                updateSpeakingState = (state) => beautifierIsSpeaking = state;
            } else { // 'floatingChat'
                currentSpeakingState = floatingChatIsSpeaking;
                currentUtteranceRef = floatingChatUtterance;
                updateSpeakingState = (state) => floatingChatIsSpeaking = state;
            }

            if (currentSpeakingState && currentUtteranceRef && currentUtteranceRef.text === text) {
                if (window.speechSynthesis.paused) {
                    window.speechSynthesis.resume();
                    updateButtonIcon(buttonElement, 'pause');
                } else {
                    window.speechSynthesis.pause();
                    updateButtonIcon(buttonElement, 'volume-2');
                }
            } else {
                startSpeech(text, buttonElement, type);
            }
        }

        function startSpeech(text, buttonElement, type = 'beautifier') {
            // Cancel any ongoing speech before starting new one (for any context)
            if (window.speechSynthesis.speaking || window.speechSynthesis.paused) {
                window.speechSynthesis.cancel();
            }
            
            // Reset other dictation buttons in the same context
            if (type === 'beautifier') {
                updateButtonIcon(dictateOutputBtn, 'volume-2');
                beautifierIsSpeaking = false;
                beautifierUtterance = null;
            } else { // 'floatingChat'
                document.querySelectorAll('#floatingChatHistory .dictate-message-btn').forEach(btn => { 
                    if (btn !== buttonElement) {
                        updateButtonIcon(btn, 'volume-2'); 
                    }
                });
                floatingChatIsSpeaking = false;
                floatingChatUtterance = null;
            }

            const utterance = new SpeechSynthesisUtterance(text);
            utterance.lang = 'en-US';

            utterance.onstart = () => {
                if (type === 'beautifier') {
                    beautifierIsSpeaking = true;
                    beautifierUtterance = utterance;
                } else {
                    floatingChatIsSpeaking = true;
                    floatingChatUtterance = utterance;
                }
                updateButtonIcon(buttonElement, 'pause');
            };
            utterance.onend = () => {
                if (type === 'beautifier') {
                    beautifierIsSpeaking = false;
                    beautifierUtterance = null;
                } else {
                    floatingChatIsSpeaking = false;
                    floatingChatUtterance = null;
                }
                updateButtonIcon(buttonElement, 'volume-2');
            };
            utterance.onerror = (event) => {
                console.error('Speech synthesis error:', event.error);
                showError('Failed to dictate message. Check console for details.');
                if (type === 'beautifier') {
                    beautifierIsSpeaking = false;
                    beautifierUtterance = null;
                } else {
                    floatingChatIsSpeaking = false;
                    floatingChatUtterance = null;
                }
                updateButtonIcon(buttonElement, 'volume-2');
            };

            window.speechSynthesis.speak(utterance);
        }

        // Function to convert a file to a Base64 string and return its MIME type and data
        const fileToBase64 = (file) => {
            return new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.onload = () => resolve({
                    mimeType: file.type || 'application/octet-stream', // Fallback MIME type
                    data: reader.result.split(',')[1]
                });
                reader.onerror = error => reject(error);
                reader.readAsDataURL(file);
            });
        };

        // Function to get Lucide icon name based on MIME type
        function getFileIcon(mimeType) {
            if (mimeType.startsWith('image/')) return 'image';
            if (mimeType === 'application/pdf') return 'file-text';
            if (mimeType.includes('text/')) return 'file-text';
            if (mimeType.includes('csv') || mimeType.includes('excel')) return 'file-spreadsheet';
            if (mimeType.includes('json') || mimeType.includes('xml') || mimeType.includes('code') || mimeType.includes('markdown')) return 'file-code';
            return 'file';
        }

        // Generic API call function with exponential backoff for resilience
        async function callGeminiAPI(payload) {
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            // IMPORTANT: Replace "AIzaSyCzx6ReMk8ohPJcCjGwHHzu7SvFccJqAbA" with your actual Google Gemini API Key.
            // Get your API key from Google AI Studio: https://makersuite.google.com/
            // Do NOT expose your API key directly in production applications without a backend proxy.
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
            const apiKey = "AIzaSyCzx6ReMk8ohPJcCjGwHHzu7SvFccJqAbA"; 

            if (apiKey === "" || !apiKey || apiKey === "") { 
                throw new Error("API Key is not set or is the default placeholder. Please replace 'AIzaSyCzx6ReMk8ohPJcCjGwHHzu7SvFccJqAbA' in the script with your actual Gemini API key.");
            }

            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;

            let response;
            let result;
            let success = false;
            let retryCount = 0;
            const maxRetries = 3; // Maximum number of retries for rate limits or network issues
            let delay = 1000; // Initial delay for exponential backoff

            while (retryCount < maxRetries && !success) {
                try {
                    response = await fetch(apiUrl, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(payload)
                    });

                    if (response.status === 429) { // Rate limit exceeded
                        if (retryCount < maxRetries - 1) {
                            console.warn(`API rate limit exceeded. Retrying in ${delay / 1000}s...`);
                            await new Promise(res => setTimeout(res, delay));
                            delay *= 2; // Exponential backoff
                            retryCount++;
                        } else {
                            throw new Error('API rate limit exceeded. Please try again later.');
                        }
                    } else if (!response.ok) { // Other API errors
                        const errorData = await response.json();
                        throw new Error(`API error: ${response.status} ${response.statusText} - ${errorData.error?.message || 'Unknown error'}`);
                    } else {
                        result = await response.json();
                        success = true; // API call successful
                    }
                } catch (err) { // Network errors or other fetch issues
                    if (retryCount < maxRetries - 1) {
                        console.warn(`Fetch error: ${err.message}. Retrying in ${delay / 1000}s...`);
                        await new Promise(res => setTimeout(res, delay));
                        delay *= 2;
                        retryCount++;
                    } else {
                        throw err; // Re-throw error if max retries reached
                    }
                }
            }
            
            // Extract the text from the AI response
            if (result && result.candidates && result.candidates.length > 0 &&
                result.candidates[0].content && result.candidates[0].content.parts &&
                result.candidates[0].content.parts.length > 0) {
                return result.candidates[0].content.parts[0].text;
            } else {
                throw new Error('Failed to get a valid response from the AI. No candidates found or content is empty.');
            }
        }

        // --- Marked.js Custom Renderer for Code Blocks (shared) ---
        const renderer = {
            code(code, lang) {
                let actualCodeContent;
                if (typeof code === 'object' && code !== null && typeof code.text === 'string') {
                    actualCodeContent = code.text;
                } else if (typeof code !== 'string') {
                    actualCodeContent = String(code);
                } else {
                    actualCodeContent = code;
                }

                const languageDisplay = lang ? `<span class="text-xs font-semibold uppercase" style="color: var(--text-secondary);">Lang: ${lang}</span>` : '';
                const uniqueId = `code-block-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
                
                const escapedCode = actualCodeContent.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#39;');

                return `
                    <div class="code-block-container" style="background-color: var(--bg-secondary); border-color: var(--border-color);">
                        <div class="code-block-header" style="background-color: var(--header-bg); color: var(--text-secondary); border-bottom-color: var(--border-color);">
                            ${languageDisplay}
                            <button class="code-block-copy-button" data-copy-target="${uniqueId}" style="color: var(--text-secondary);">
                                <span data-lucide="clipboard" class="w-4 h-4"></span>
                                Copy code
                            </button>
                        </div>
                        <pre style="color: var(--text-primary);"><code id="${uniqueId}">${escapedCode}</code></pre>
                    </div>
                `;
            }
        };
        marked.use({ renderer });


        // --- Text Beautifier Specific Logic ---

        // Adjust text input textarea height dynamically
        function adjustTextInputHeight() {
            textInput.style.height = 'auto';
            textInput.style.height = textInput.scrollHeight + 'px';
        }
        textInput.addEventListener('input', adjustTextInputHeight);
        
        // Beautifier Session Management
        function loadAllBeautifierSessions() {
            const storedSessions = localStorage.getItem(BEAUTIFIER_SESSIONS_KEY);
            if (storedSessions) {
                allBeautifierSessions = JSON.parse(storedSessions);
            } else {
                allBeautifierSessions = {};
            }
            renderBeautifierSessionsSidebar();
        }

        function saveAllBeautifierSessions() {
            localStorage.setItem(BEAUTIFIER_SESSIONS_KEY, JSON.stringify(allBeautifierSessions));
        }

        function renderBeautifierSessionsSidebar() {
            sidebarBeautifierList.innerHTML = '';
            const sortedSessions = Object.values(allBeautifierSessions).sort((a, b) => b.timestamp - a.timestamp);

            if (sortedSessions.length === 0 && !currentBeautifierSessionId) {
                createNewBeautifierSession('New Beautification');
                return;
            }

            sortedSessions.forEach(session => {
                const li = document.createElement('li');
                li.classList.add('sidebar-beautifier-item');
                if (session.id === currentBeautifierSessionId) {
                    li.classList.add('active');
                }
                li.dataset.sessionId = session.id;

                li.innerHTML = `
                    <div class="sidebar-beautifier-item-content">
                        <span data-lucide="layout-template" class="w-5 h-5" style="color: inherit;"></span>
                        <span class="sidebar-beautifier-item-title" title="${session.title}">${session.title}</span>
                    </div>
                    <div class="sidebar-beautifier-item-actions">
                        <button class="delete-beautifier-btn" title="Delete session">
                            <span data-lucide="trash-2"></span>
                        </button>
                    </div>
                `;
                sidebarBeautifierList.appendChild(li);
            });
            createIcons();
        }

        function createNewBeautifierSession(initialTitle = 'New Beautification') {
            // Stop any ongoing speech
            if (beautifierIsSpeaking) {
                window.speechSynthesis.cancel();
                beautifierIsSpeaking = false;
                beautifierUtterance = null;
                updateButtonIcon(dictateOutputBtn, 'volume-2');
            }

            const newId = generateUniqueId();
            const newSession = {
                id: newId,
                title: initialTitle,
                inputText: '',
                outputHTML: '<p style="color: var(--text-secondary);">Your beautifully formatted text will appear here.</p>',
                outputRawText: 'Your beautifully formatted text will appear here.',
                timestamp: Date.now()
            };
            allBeautifierSessions[newId] = newSession;
            currentBeautifierSessionId = newId;
            localStorage.setItem(CURRENT_BEAUTIFIER_SESSION_ID_KEY, newId);
            saveAllBeautifierSessions();

            textInput.value = '';
            presentationOutputDiv.innerHTML = newSession.outputHTML;
            adjustTextInputHeight();
            textInput.focus();
            
            renderBeautifierSessionsSidebar();
            sidebar.classList.add('hidden-mobile');
            sidebarOverlay.classList.remove('active');
            createIcons(); // Re-render icons after changing output
        }

        function loadBeautifierSession(sessionId) {
            if (currentBeautifierSessionId === sessionId) return;
            
            const session = allBeautifierSessions[sessionId];
            if (!session) {
                console.error('Beautifier session not found:', sessionId);
                showError('Requested beautifier session not found.');
                return;
            }

            // Stop any ongoing speech
            if (beautifierIsSpeaking) {
                window.speechSynthesis.cancel();
                beautifierIsSpeaking = false;
                beautifierUtterance = null;
                updateButtonIcon(dictateOutputBtn, 'volume-2');
            }

            currentBeautifierSessionId = sessionId;
            localStorage.setItem(CURRENT_BEAUTIFIER_SESSION_ID_KEY, sessionId);

            textInput.value = session.inputText;
            presentationOutputDiv.innerHTML = session.outputHTML;
            adjustTextInputHeight();
            textInput.focus();
            
            renderBeautifierSessionsSidebar();
            sidebar.classList.add('hidden-mobile');
            sidebarOverlay.classList.remove('active');
            createIcons(); // Re-render icons after changing output
        }

        function updateCurrentBeautifierSession(inputText, outputHTML, outputRawText, newTitle = null) {
            if (!currentBeautifierSessionId || !allBeautifierSessions[currentBeautifierSessionId]) {
                console.error("No active beautifier session to update. This should not happen.");
                return;
            }

            const session = allBeautifierSessions[currentBeautifierSessionId];
            session.inputText = inputText;
            session.outputHTML = outputHTML;
            session.outputRawText = outputRawText;
            session.timestamp = Date.now();

            if (newTitle) {
                session.title = newTitle;
            } else if (session.title === 'New Beautification' && inputText.trim() !== '') {
                session.title = inputText.substring(0, 50) + (inputText.length > 50 ? '...' : '');
            }
            saveAllBeautifierSessions();
            renderBeautifierSessionsSidebar();
        }

        function deleteBeautifierSession(sessionIdToDelete) {
            if (confirm('Are you sure you want to delete this beautification session? This action cannot be undone.')) {
                delete allBeautifierSessions[sessionIdToDelete];
                saveAllBeautifierSessions();
                
                if (currentBeautifierSessionId === sessionIdToDelete) {
                    currentBeautifierSessionId = null;
                    localStorage.removeItem(CURRENT_BEAUTIFIER_SESSION_ID_KEY);
                    createNewBeautifierSession('New Beautification');
                } else {
                    renderBeautifierSessionsSidebar();
                }
                showCopyMessage('Beautification session deleted successfully!', `var(--accent-error)`);
            }
        }

        // Event listener for Beautify button
        beautifyButton.addEventListener('click', async () => {
            const inputText = textInput.value.trim();
            if (!inputText) {
                showError('Please enter some text to beautify.');
                return;
            }

            // Stop any ongoing speech when a new beautification request is made
            if (beautifierIsSpeaking) {
                window.speechSynthesis.cancel();
                beautifierIsSpeaking = false;
                beautifierUtterance = null;
                updateButtonIcon(dictateOutputBtn, 'volume-2'); // Reset icon
            }

            beautifyButton.disabled = true;
            presentationOutputDiv.innerHTML = ''; // Clear previous output
            outputLoadingDiv.classList.remove('hidden'); // Show loading indicator
            
            try {
                // Craft the AI prompt for intelligent text beautification and Markdown formatting
                const prompt = `You are a sophisticated text beautification and formatting AI. Your task is to take any input text (which might be plain, or already contain some markdown) and transform it into a beautifully structured, highly readable, and elegantly formatted Markdown document.

Consider the following:
*   Use appropriate headings (H1, H2, H3) for structure.
*   Organize information into bullet points or numbered lists where suitable.
*   Highlight key terms or phrases using **bold** or *italics*.
*   Use blockquotes for citations or emphasized statements.
*   If code snippets or technical text are present, format them within fenced code blocks (e.g., \`\`\`language\`). Identify the language if possible.
*   Ensure clear paragraphs and line breaks for optimal readability.
*   Strive for a professional and clean presentation.
*   If the text seems like a title, make it an H1. If it seems like a list, make it a list. If it's a block of plain text, break it into logical paragraphs and maybe add relevant subtitles.
*   Maintain the core meaning and content of the original text.

Return only the fully formatted Markdown text. Do not add any conversational remarks, introductions, or conclusions. Just the Markdown.

Here is the text to beautify:
\`\`\`
${inputText}
\`\`\``;

                const payload = {
                    contents: [{ role: 'user', parts: [{ text: prompt }] }],
                };
                
                const responseMarkdown = await callGeminiAPI(payload);
                
                // Render the AI's Markdown response into the output div
                const renderedHTML = marked.parse(responseMarkdown);
                presentationOutputDiv.innerHTML = renderedHTML;
                
                updateCurrentBeautifierSession(inputText, renderedHTML, responseMarkdown);
                
            } catch (error) {
                console.error('AI Beautification failed:', error);
                showError(`Failed to beautify text: ${error.message}`);
                presentationOutputDiv.innerHTML = `<p style="color: var(--accent-error);">Error: ${error.message}. Please try again or refine your input.</p>`;
                updateCurrentBeautifierSession(inputText, presentationOutputDiv.innerHTML, `Error: ${error.message}. Please try again or refine your input.`);
            } finally {
                beautifyButton.disabled = false;
                outputLoadingDiv.classList.add('hidden');
                createIcons(); // Re-render icons for new content (e.g., copy buttons in code blocks)
                presentationOutputDiv.scrollTop = 0; // Scroll output to top
            }
        });
        
        // Event listener for New Beautification Session button in sidebar
        newBeautifierSessionButton.addEventListener('click', () => {
            createNewBeautifierSession('New Beautification');
        });

        // Event listener for copying beautifier output
        copyOutputBtn.addEventListener('click', () => {
            const outputText = allBeautifierSessions[currentBeautifierSessionId]?.outputRawText || presentationOutputDiv.innerText;
            if (!outputText || outputText.trim() === 'Your beautifully formatted text will appear here.') {
                showError('No text to copy in the output area.');
                return;
            }
            updateButtonIcon(copyOutputBtn, 'check');
            copyToClipboard(outputText); 
            setTimeout(() => {
                updateButtonIcon(copyOutputBtn, 'clipboard');
            }, 2000);
        });

        // Event listener for dictating beautifier output
        dictateOutputBtn.addEventListener('click', () => {
            const outputText = allBeautifierSessions[currentBeautifierSessionId]?.outputRawText || presentationOutputDiv.innerText;
             if (!outputText || outputText.trim() === 'Your beautifully formatted text will appear here.') {
                showError('No text to dictate in the output area.');
                return;
            }
            toggleSpeech(outputText, dictateOutputBtn, 'beautifier');
        });

        // Event delegation for copy code buttons inside the presentation output
        presentationOutputDiv.addEventListener('click', (event) => {
            const codeCopyButton = event.target.closest('.code-block-copy-button');
            if (codeCopyButton) {
                const targetId = codeCopyButton.dataset.copyTarget;
                const codeElement = document.getElementById(targetId);
                if (codeElement) {
                    const codeToCopy = codeElement.textContent;
                    updateButtonIcon(codeCopyButton, 'check', 'w-4 h-4');
                    copyToClipboard(codeToCopy); 
                    setTimeout(() => {
                        updateButtonIcon(codeCopyButton, 'clipboard', 'w-4 h-4');
                    }, 2000);
                } else {
                    showError('Code block content not found for copying.');
                }
            }
        });

        // Event delegation for sidebar beautifier sessions
        sidebarBeautifierList.addEventListener('click', (event) => {
            const beautifierItem = event.target.closest('.sidebar-beautifier-item');
            if (beautifierItem) {
                const sessionId = beautifierItem.dataset.sessionId;
                const deleteBtn = event.target.closest('.delete-beautifier-btn');

                if (deleteBtn) {
                    event.stopPropagation(); // Prevent loading session when deleting
                    deleteBeautifierSession(sessionId);
                } else {
                    loadBeautifierSession(sessionId);
                }
            }
        });

        // Hamburger menu for mobile sidebar
        hamburgerMenuButton.addEventListener('click', () => {
            sidebar.classList.remove('hidden-mobile');
            sidebarOverlay.classList.add('active');
        });

        closeSidebarBtn.addEventListener('click', () => {
            sidebar.classList.add('hidden-mobile');
            sidebarOverlay.classList.remove('active');
        });

        sidebarOverlay.addEventListener('click', () => {
            sidebar.classList.add('hidden-mobile');
            sidebarOverlay.classList.remove('active');
        });


        // --- Floating Chatbot Specific Logic ---
        
        // Toggle chatbot window visibility
        floatingChatbotToggleBtn.addEventListener('click', () => {
            floatingChatbotWindow.classList.toggle('open');
            floatingChatbotToggleBtn.classList.toggle('active');
            if (floatingChatbotWindow.classList.contains('open')) {
                floatingChatInput.focus();
                floatingChatHistoryDiv.scrollTop = floatingChatHistoryDiv.scrollHeight;
            } else {
                // Stop speech recognition if active when closing chat
                if (floatingIsVoiceInputActive && floatingRecognition) {
                    floatingRecognition.stop();
                }
                // Stop speech synthesis if active when closing chat
                if (floatingChatIsSpeaking) {
                    window.speechSynthesis.cancel();
                    floatingChatIsSpeaking = false;
                    floatingChatUtterance = null;
                }
            }
        });

        // Close chatbot button
        floatingChatCloseBtn.addEventListener('click', () => {
            floatingChatbotWindow.classList.remove('open');
            floatingChatbotToggleBtn.classList.remove('active');
            // Stop speech recognition if active when closing chat
            if (floatingIsVoiceInputActive && floatingRecognition) {
                floatingRecognition.stop();
            }
            // Stop speech synthesis if active when closing chat
            if (floatingChatIsSpeaking) {
                window.speechSynthesis.cancel();
                floatingChatIsSpeaking = false;
                floatingChatUtterance = null;
            }
        });

        // Load floating chat history from local storage
        function loadFloatingChatHistory() {
            const storedHistory = localStorage.getItem(FLOATING_CHAT_HISTORY_KEY);
            if (storedHistory) {
                floatingChatHistory = JSON.parse(storedHistory);
                renderFloatingChatHistory();
            } else {
                // Initial welcome message for a new chat
                floatingChatHistory = [{
                    role: 'model',
                    parts: [{ text: 'Hello! I am your AI assistant. How can I assist you today? Feel free to ask questions or attach relevant files for analysis related to Dream11 or any other topic!' }]
                }];
                saveFloatingChatHistory();
                renderFloatingChatHistory();
            }
        }

        // Save floating chat history to local storage
        function saveFloatingChatHistory() {
            localStorage.setItem(FLOATING_CHAT_HISTORY_KEY, JSON.stringify(floatingChatHistory));
        }

        // Render the floating chat history
        function renderFloatingChatHistory() {
            floatingChatHistoryDiv.innerHTML = '';
            floatingMessageTextCache.clear(); // Clear cache before re-rendering
            floatingChatHistory.forEach(msg => {
                if (msg.role === 'user') {
                    let userText = '';
                    const displayAttachments = [];
                    msg.parts.forEach(part => {
                        if (part.text) {
                            userText += part.text + ' ';
                        } else if (part.inlineData) {
                            displayAttachments.push({
                                mimeType: part.inlineData.mimeType,
                                data: part.inlineData.data,
                                name: part.inlineData.name || `attachment_${displayAttachments.length + 1}`
                            });
                        }
                    });
                    appendFloatingChatMessage('user', userText.trim(), displayAttachments);
                } else {
                    appendFloatingChatMessage('ai', msg.parts[0].text);
                }
            });
            floatingChatHistoryDiv.scrollTop = floatingChatHistoryDiv.scrollHeight;
        }

        // Function to append a message to the floating chat history
        function appendFloatingChatMessage(role, text, attachments = []) {
            const messageDiv = document.createElement('div');
            messageDiv.classList.add('chat-message', role);
            
            const messageId = `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
            messageDiv.dataset.messageId = messageId;
            
            let contentHTML = '';
            let rawMessageContentForCache = '';

            if (role === 'user') {
                rawMessageContentForCache = `You: ${text}`;
                contentHTML += `<span class="font-bold">You:</span> ${text}`;
                if (attachments.length > 0) {
                    contentHTML += `<div class="mt-2 flex flex-wrap gap-2">`;
                    attachments.forEach(attachment => {
                        if (attachment.mimeType.startsWith('image/')) {
                            contentHTML += `<img src="data:${attachment.mimeType};base64,${attachment.data}" alt="${attachment.name || 'User attachment'}" class="chat-image w-24 h-24 object-cover">`;
                        } else {
                            contentHTML += `
                                <div class="flex items-center space-x-1 p-2 rounded-md text-sm" style="background-color: var(--bg-secondary); color: var(--text-primary);">
                                    <span data-lucide="${getFileIcon(attachment.mimeType)}" class="w-4 h-4 flex-shrink-0" style="color: var(--accent-secondary);"></span>
                                    <span class="truncate max-w-[120px]">${attachment.name || 'File'}</span>
                                </div>
                            `;
                        }
                    });
                    contentHTML += `</div>`;
                    rawMessageContentForCache += `\n[Attachments: ${attachments.map(a => a.name).join(', ')}]`;
                }
            } else { // AI message
                rawMessageContentForCache = `AI: ${text}`;
                contentHTML = `<div class="message-content">${marked.parse(text)}</div>`;
            }
            
            floatingMessageTextCache.set(messageId, rawMessageContentForCache); 

            const actionsHTML = `
                <div class="message-actions">
                    <button class="copy-message-btn" title="Copy message" data-message-id="${messageId}">
                        <span data-lucide="clipboard" class="w-4 h-4"></span>
                    </button>
                    <button class="dictate-message-btn" title="Dictate message" data-message-id="${messageId}">
                        <span data-lucide="volume-2" class="w-4 h-4"></span>
                    </button>
                </div>
            `;
            
            messageDiv.innerHTML = contentHTML + actionsHTML;
            floatingChatHistoryDiv.appendChild(messageDiv);
            
            setTimeout(() => {
                messageDiv.style.transform = 'scale(1)';
            }, 10);
            
            floatingChatHistoryDiv.scrollTop = floatingChatHistoryDiv.scrollHeight;
            
            createIcons();
        }

        // New Chat button for floating chatbot
        floatingNewChatButton.addEventListener('click', () => {
            // Stop current speech/recognition
            if (floatingChatIsSpeaking) {
                window.speechSynthesis.cancel();
                floatingChatIsSpeaking = false;
                floatingChatUtterance = null;
            }
            if (floatingIsVoiceInputActive && floatingRecognition) {
                floatingRecognition.stop();
            }

            floatingChatHistory = [{
                role: 'model',
                parts: [{ text: 'Hello! I am your AI assistant. How can I assist you today? Feel free to ask questions or attach relevant files for analysis related to Dream11 or any other topic!' }]
            }];
            floatingChatInput.value = '';
            floatingChatInput.dataset.initialText = '';
            floatingChatAttachments = [];
            floatingChatFileUpload.value = '';
            displayFloatingChatAttachments();
            adjustFloatingChatInputHeight();
            saveFloatingChatHistory();
            renderFloatingChatHistory();
            floatingChatInput.focus();
        });
        
        // Event listener for floating chat file upload
        floatingChatFileUpload.addEventListener('change', async (event) => {
            const files = Array.from(event.target.files);
            if (files.length > 0) {
                await processFloatingChatFiles(files);
                floatingChatInput.focus();
            }
        });

        // Helper function to process files for floating chatbot
        async function processFloatingChatFiles(files) {
            for (const file of files) {
                const allowedTypes = [
                    'image/', 'text/', 'application/pdf',
                    'application/json', 'text/csv', 'application/xml', 'text/markdown'
                ];
                const isAllowed = allowedTypes.some(type => file.type.startsWith(type)) || file.name.endsWith('.md');

                if (isAllowed) {
                    try {
                        const { mimeType, data } = await fileToBase64(file);
                        floatingChatAttachments.push({ file, mimeType, data, name: file.name });
                    } catch (error) {
                        showError(`Failed to read chatbot file ${file.name}.`);
                        console.error('Chatbot file read error:', error);
                    }
                } else {
                    showError(`File type not supported for chatbot: ${file.name} (${file.type}).`);
                }
            }
            displayFloatingChatAttachments();
            adjustFloatingChatInputHeight();
        }

        // Function to display floating chat attachments
        function displayFloatingChatAttachments() {
            floatingChatAttachmentsPreviewContainer.innerHTML = '';
            if (floatingChatAttachments.length > 0) {
                floatingChatAttachmentsPreviewContainer.classList.remove('hidden');
                floatingChatAttachments.forEach((attachment, index) => {
                    const attachmentDiv = document.createElement('div');
                    attachmentDiv.classList.add('chat-attachment-preview-item');
                    attachmentDiv.dataset.index = index;

                    let previewContent = '';
                    if (attachment.mimeType.startsWith('image/')) {
                        previewContent = `<img src="data:${attachment.mimeType};base64,${attachment.data}" alt="${attachment.name}" class="w-8 h-8 object-cover rounded-md">`;
                    } else {
                        previewContent = `<span data-lucide="${getFileIcon(attachment.mimeType)}" class="w-5 h-5 flex-shrink-0"></span>`;
                    }

                    attachmentDiv.innerHTML = `
                        ${previewContent}
                        <span class="truncate max-w-[100px]">${attachment.name}</span>
                        <button class="remove-attachment-btn">
                            <span data-lucide="x" class="w-4 h-4"></span>
                        </button>
                    `;
                    floatingChatAttachmentsPreviewContainer.appendChild(attachmentDiv);
                });
                createIcons();
            } else {
                floatingChatAttachmentsPreviewContainer.classList.add('hidden');
            }
        }

        // Event listener for removing individual floating chat attachments (using event delegation)
        floatingChatAttachmentsPreviewContainer.addEventListener('click', (event) => {
            const removeBtn = event.target.closest('.remove-attachment-btn');
            if (removeBtn) {
                const attachmentDiv = removeBtn.closest('[data-index]');
                if (attachmentDiv) {
                    const index = parseInt(attachmentDiv.dataset.index);
                    floatingChatAttachments.splice(index, 1);
                    displayFloatingChatAttachments();
                    floatingChatInput.focus();
                }
            }
        });

        // Adjust floating chat input textarea height dynamically
        function adjustFloatingChatInputHeight() {
            floatingChatInput.style.height = 'auto';
            floatingChatInput.style.height = floatingChatInput.scrollHeight + 'px';
        }
        floatingChatInput.addEventListener('input', adjustFloatingChatInputHeight);
        
        // Event listener for sending floating chat messages
        floatingSendChatBtn.addEventListener('click', async () => {
            const userMessage = floatingChatInput.value.trim();
            if (!userMessage && floatingChatAttachments.length === 0) {
                return;
            }
            
            // Stop speech recognition if active before sending
            if (floatingIsVoiceInputActive && floatingRecognition) {
                floatingRecognition.stop();
            }
            // Stop speech synthesis if active
            if (floatingChatIsSpeaking) {
                window.speechSynthesis.cancel();
                floatingChatIsSpeaking = false;
                floatingChatUtterance = null;
            }

            const userParts = [];
            if (userMessage) {
                userParts.push({ text: userMessage });
            }
            for (const attachment of floatingChatAttachments) {
                userParts.push({
                    inlineData: {
                        mimeType: attachment.mimeType,
                        data: attachment.data,
                        name: attachment.name // Ensure name is preserved for display if needed later
                    }
                });
            }

            floatingChatHistory.push({ role: 'user', parts: userParts });
            appendFloatingChatMessage('user', userMessage, floatingChatAttachments);
            
            // Clear input and attachment after sending
            floatingChatInput.value = '';
            floatingChatInput.dataset.initialText = ''; // Clear initial text for voice input
            adjustFloatingChatInputHeight();
            floatingChatAttachments = [];
            floatingChatFileUpload.value = '';
            displayFloatingChatAttachments();
            
            floatingSendChatBtn.disabled = true;
            
            const loadingMessage = document.createElement('div');
            loadingMessage.id = 'floating-chat-loading';
            loadingMessage.classList.add('p-4', 'text-center', 'text-sm');
            loadingMessage.style.color = 'var(--text-secondary)';
            loadingMessage.innerHTML = `
                <div class="loader-container h-8">
                    <div class="loader-dot"></div>
                    <div class="loader-dot"></div>
                    <div class="loader-dot"></div>
                </div>
                <span class="mt-2 block">AI is typing...</span>
            `;
            floatingChatHistoryDiv.appendChild(loadingMessage);
            floatingChatHistoryDiv.scrollTop = floatingChatHistoryDiv.scrollHeight;
            
            try {
                const payload = {
                    contents: floatingChatHistory,
                };
                
                const responseText = await callGeminiAPI(payload);
                
                floatingChatHistory.push({ role: 'model', parts: [{ text: responseText }] });
                appendFloatingChatMessage('ai', responseText);
                
                saveFloatingChatHistory();
                
            } catch (error) {
                console.error('Floating Chat API call failed:', error);
                showError(`An error occurred in the chatbot: ${error.message}`);
                // If API call fails, remove the last user message from history for re-try
                floatingChatHistory.pop(); 
                saveFloatingChatHistory();
            } finally {
                floatingSendChatBtn.disabled = false;
                const loadingDiv = document.getElementById('floating-chat-loading');
                if (loadingDiv) {
                    loadingDiv.remove();
                }
                floatingChatInput.focus();
            }
        });
        
        // Add event listener for the 'Enter' key on the floating chat input
        floatingChatInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                floatingSendChatBtn.click();
            }
        });

        // Event listener for floating voice input button
        floatingVoiceInputBtn.addEventListener('click', () => {
            if (floatingRecognition) {
                if (floatingIsVoiceInputActive) {
                    floatingRecognition.stop();
                } else {
                    floatingFinalTranscript = '';
                    floatingRecognition.start();
                }
            } else {
                showError('Speech recognition is not supported in this browser for the chatbot.');
            }
        });

        // Drag and Drop for Floating Chat Input Area
        floatingChatInputAreaContainer.addEventListener('dragover', (e) => {
            e.preventDefault();
            e.stopPropagation();
            floatingChatInputAreaContainer.classList.add('drag-over-active');
        });

        floatingChatInputAreaContainer.addEventListener('dragleave', (e) => {
            e.preventDefault();
            e.stopPropagation();
            floatingChatInputAreaContainer.classList.remove('drag-over-active');
        });

        floatingChatInputAreaContainer.addEventListener('drop', async (e) => {
            e.preventDefault();
            e.stopPropagation();
            floatingChatInputAreaContainer.classList.remove('drag-over-active');

            const files = Array.from(e.dataTransfer.files);
            if (files.length > 0) {
                await processFloatingChatFiles(files);
                floatingChatInput.focus();
            }
        });

        // Paste files onto the floating chat input box
        floatingChatInput.addEventListener('paste', async (event) => {
            const items = (event.clipboardData || event.originalEvent.clipboardData).items;
            let filesToProcess = [];
            let textToPaste = '';

            for (const item of items) {
                if (item.kind === 'file' && item.type.startsWith('image/')) {
                    const file = item.getAsFile();
                    if (file) {
                        filesToProcess.push(file);
                    }
                } else if (item.kind === 'string' && item.type === 'text/plain') {
                    item.getAsString(s => textToPaste = s);
                }
            }

            if (filesToProcess.length > 0) {
                event.preventDefault();
                await processFloatingChatFiles(filesToProcess);
                if (textToPaste) {
                    floatingChatInput.value += textToPaste;
                }
                adjustFloatingChatInputHeight();
            }
        });

        // Event delegation for copy/dictate buttons within floating chat history
        floatingChatHistoryDiv.addEventListener('click', (event) => {
            const codeCopyButton = event.target.closest('.code-block-copy-button');
            if (codeCopyButton) {
                const targetId = codeCopyButton.dataset.copyTarget;
                const codeElement = document.getElementById(targetId);
                if (codeElement) {
                    const codeToCopy = codeElement.textContent;
                    updateButtonIcon(codeCopyButton, 'check', 'w-4 h-4');
                    copyToClipboard(codeToCopy); 
                    setTimeout(() => {
                        updateButtonIcon(codeCopyButton, 'clipboard', 'w-4 h-4');
                    }, 2000);
                    return;
                }
            }

            const chatCopyButton = event.target.closest('.copy-message-btn');
            if (chatCopyButton) {
                const messageId = chatCopyButton.dataset.messageId;
                const messageContent = floatingMessageTextCache.get(messageId);
                if (messageContent) {
                    updateButtonIcon(chatCopyButton, 'check');
                    copyToClipboard(messageContent); 
                    setTimeout(() => {
                        updateButtonIcon(chatCopyButton, 'clipboard');
                    }, 2000);
                } else {
                    showError('Message content not found for copying in chatbot.');
                }
                return;
            }

            const dictateButton = event.target.closest('.dictate-message-btn');
            if (dictateButton) {
                const messageId = dictateButton.dataset.messageId;
                const messageContent = floatingMessageTextCache.get(messageId);
                if (messageContent) {
                    toggleSpeech(messageContent, dictateButton, 'floatingChat');
                } else {
                    showError('Message content not found for dictation in chatbot.');
                }
                return;
            }
        });


        // --- Initial Load ---
        window.addEventListener('load', () => {
            createIcons(); // Render all Lucide icons on page load
            
            // Initialize Text Beautifier
            loadAllBeautifierSessions();
            let storedBeautifierSessionId = localStorage.getItem(CURRENT_BEAUTIFIER_SESSION_ID_KEY);
            if (storedBeautifierSessionId && allBeautifierSessions[storedBeautifierSessionId]) {
                loadBeautifierSession(storedBeautifierSessionId);
            } else if (Object.keys(allBeautifierSessions).length > 0) {
                const mostRecentSessionId = Object.values(allBeautifierSessions).sort((a,b) => b.timestamp - a.timestamp)[0].id;
                loadBeautifierSession(mostRecentSessionId);
            } else {
                createNewBeautifierSession('New Beautification');
            }

            // Set the correct selected option for the APP theme selector on load
            if (appThemeSelect && localStorage.getItem(THEME_STORAGE_KEY)) {
                appThemeSelect.value = localStorage.getItem(THEME_STORAGE_KEY);
            } else if (appThemeSelect && appThemeSelect.options.length > 0) {
                appThemeSelect.value = DEFAULT_THEME_NAME; // Default to 'default' if nothing stored
            }

            adjustTextInputHeight(); // Adjust initial input height based on content

            // Initialize Floating Chatbot
            loadFloatingChatHistory();
            adjustFloatingChatInputHeight();
        });
    </script>
</body>
</html>